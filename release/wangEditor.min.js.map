{"version":3,"sources":["wangEditor.js"],"names":["global","factory","exports","module","define","amd","self","wangEditor","this","_typeof","obj","Symbol","iterator","constructor","prototype","_defineProperty","key","value","Object","defineProperty","enumerable","configurable","writable","_objectSpread","target","i","arguments","length","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","forEach","createElemByHTML","html","div","document","createElement","innerHTML","children","isDOMList","selector","HTMLCollection","NodeList","querySelectorAll","result","DomElement","nodeType","selectorResult","Array","replace","trim","indexOf","$","objForEach","fn","hasOwnProperty","call","arrForEach","fakeArr","item","getRandom","prefix","Math","random","toString","slice","replaceHtmlSymbol","isFunction","Bold","editor","$elem","type","_active","replaceLang","str","langArgs","config","reg","val","test","DropList","menu","opt","_this","titleHtml","$container","$title","addClass","append","list","onClick","_emptyFn","$list","elemHtml","$li","on","e","hideTimeoutId","setTimeout","hide","_rendered","_show","Head","droplist","width","_command","FontSize","FontName","fontNames","map","fontName","Panel","Link","Italic","Redo","StrikeThrough","Underline","Undo","List","Justify","ForeColor","colors","color","BackColor","Quote","Code","Emoticon","Table","Video","Image","imgMenuId","Menus","menus","getPasteText","pasteText","clipboardData","originalEvent","window","getData","getPasteHtml","filterStyle","ignoreImg","pasteHtml","docSplitHtml","split","getPasteImgs","items","push","getAsFile","getChildrenJSON","childNodes","curElem","elemResult","textContent","tag","nodeName","toLowerCase","attrData","attrList","attributes","attrListLength","attr","name","attrs","Text","Command","API","_currentRange","Progress","_time","_isShow","_isRender","_timeoutId","$textContainer","$textContainerElem","$bar","UploadImg","Editor","toolbarSelector","textSelector","Error","id","editorId","customConfig","eventList","elem","clone","deep","cloneList","cloneNode","get","index","first","last","types","addEventListener","matches","off","removeEventListener","getAttribute","setAttribute","className","arr","join","removeClass","css","currentStyle","styleArr","style","resultArr","show","$children","child","appendChild","remove","parent","parentElement","removeChild","isContain","$child","contains","getSizeData","getBoundingClientRect","getNodeName","find","text","focus","parentUntil","_currentElem","results","equal","insertBefore","$referenceNode","referenceNode","parentNode","insertAfter","lastChild","nextSibling","offAll","emotions","title","content","alt","src","zIndex","debug","linkCheck","link","linkImgCheck","pasteFilterStyle","pasteIgnoreImg","pasteTextHandle","showLinkImg","linkImgCallback","url","uploadImgMaxSize","uploadImgShowBase64","uploadFileName","uploadImgParams","uploadImgHeaders","withCredentials","uploadImgTimeout","uploadImgHooks","before","xhr","files","success","fail","error","timeout","qiniu","UA","_ua","navigator","userAgent","isWebkit","isIE","isSeleEmpty","selection","isSelectionEmpty","createEmptyRange","cmd","do","collapseRange","restoreSelection","tryChangeActive","queryCommandState","clearTimeout","$menuELem","menuHeight","height","showTimeoutId","$selectionElem","getSelectionContainerElem","$textElem","cmdValue","queryCommandValue","emptyFn","_isCreatedPanelMenus","$body","$closeBtn","$tabTitleContainer","$tabContentContainer","tabs","tabTitleArr","tabContentArr","tab","tabIndex","tpl","$content","_index","stopPropagation","events","event","$inputs","_hideOtherPanels","panel","$linkelem","createRangeByElem","_createPanel","getSelectionText","inputLinkId","inputTextId","btnOkId","btnDelId","delBtnDisplay","$link","$text","_insertLink","_delLink","selectionText","checkResult","alert","$selectionELem","$parent","$targetELem","$code","$startElem","getSelectionStartElem","$endElem","getSelectionEndElem","textId","btnId","_insertCode","_updateCode","$parentElem","tabConfig","emotData","emotType","faceHtml","insertHtml","$target","_insert","emotHtml","_createEditPanel","_createInsertPanel","btnInsertId","textRowNum","textColNum","rowNum","parseInt","colNum","r","c","_this2","addRowBtnId","addColBtnId","delRowBtnId","delColBtnId","delTableBtnId","_addRow","_addCol","_delRow","_delCol","_delTable","_getLocationData","$tr","$tds","tdLength","td","$tbody","$trs","trLength","tr","locationData","trData","$currentTr","tdData","newTr","tdIndex","$currentTd","$table","textValId","width30","width50","width100","delBtn","tabsConfig","$img","_selectedImg","uploadImg","upTriggerId","upFileId","linkUrlId","linkBtnId","$file","fileElem","click","fileList","$linkUrl","insertLinkImg","tabsConfigResult","uploadImgServer","customUploadImg","FileReader","MenuConstructors","bold","head","fontSize","italic","redo","strikeThrough","underline","undo","justify","foreColor","backColor","quote","code","emoticon","table","video","image","init","menuKey","MenuConstructor","_addToToolbar","_bindEvent","$toolbarElem","getRange","changeActive","clear","initSelection","getJSON","_saveRangeRealTime","_enterKeyHandle","_clearHandle","_pasteHandle","_tabHandle","_imgHandle","_dragHandle","saveRange","insertEmptyP","$p","pHandle","codeHandle","selectionNodeName","parentNodeName","queryCommandSupported","_willBreakCode","preventDefault","_startOffset","startOffset","codeLength","keyCode","txtHtml","canDo","now","Date","flag","pasteTime","resetTime","ex","pasteFiles","img","dataTransfer","_useStyleWithCSS","execCommand","_name","_execCommand","change","_insertHTML","range","insertNode","deleteContents","pasteHTML","_insertElem","_range","getSelection","rangeCount","getRangeAt","$containerElem","toStart","collapse","commonAncestorContainer","startContainer","endContainer","endOffset","removeAllRanges","addRange","setEnd","isContent","createRange","selectNodeContents","selectNode","progress","timeoutId","_hide","_alert","alertInfo","debugInfo","customAlert","onload","callback","onerror","onabort","_this3","maxSize","maxSizeM","maxLength","uploadImgMaxLength","uploadImgParamsWithUrl","hooks","resultFiles","errInfo","file","size","bind","formdata","FormData","uploadImgServerArr","uploadImgServerHash","XMLHttpRequest","open","ontimeout","upload","onprogress","percent","progressBar","lengthComputable","loaded","total","onreadystatechange","readyState","status","responseText","JSON","parse","customInsert","errno","data","beforeResult","prevent","msg","setRequestHeader","send","reader","readAsDataURL","_initConfig","assign","langConfig","lang","RegExp","_initDom","params","containerHeight","$toolbarSelector","config$$1","toolbarElemId","textElemId","compositionEnd","onfocus","onblur","isFocus","isChild","isToolbar","isMenu","_initCommand","_initSelectionAPI","_initUploadImg","_initMenus","_initText","txt","newLine","$last","onChangeTimeoutId","beforeChangeHtml","onchangeTimeout","onchange","currentHtml","create","defalutParams","_offAllEvent","varArgs","TypeError","to","nextSource","nextKey","Element","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","s","ownerDocument","getElementsByTagName"],"mappings":"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","file":"wangEditor.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global = global || self, global.wangEditor = factory());\n}(this, function () { 'use strict';\n\n    /*\n        poly-fill\n    */\n    function polyfill () {\n      // Object.assign\n      if (typeof Object.assign != 'function') {\n        Object.assign = function (target, varArgs) {\n          // .length of function is 2\n          if (target == null) {\n            // TypeError if undefined or null\n            throw new TypeError('Cannot convert undefined or null to object');\n          }\n\n          var to = Object(target);\n\n          for (var index = 1; index < arguments.length; index++) {\n            var nextSource = arguments[index];\n\n            if (nextSource != null) {\n              // Skip over if undefined or null\n              for (var nextKey in nextSource) {\n                // Avoid bugs when hasOwnProperty is shadowed\n                if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                  to[nextKey] = nextSource[nextKey];\n                }\n              }\n            }\n          }\n\n          return to;\n        };\n      } // IE 中兼容 Element.prototype.matches\n\n\n      if (!Element.prototype.matches) {\n        Element.prototype.matches = Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector || function (s) {\n          var matches = (this.document || this.ownerDocument).querySelectorAll(s),\n              i = matches.length;\n\n          while (--i >= 0 && matches.item(i) !== this) {}\n\n          return i > -1;\n        };\n      }\n    }\n\n    function _typeof(obj) {\n      if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n        _typeof = function (obj) {\n          return typeof obj;\n        };\n      } else {\n        _typeof = function (obj) {\n          return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n        };\n      }\n\n      return _typeof(obj);\n    }\n\n    function _defineProperty(obj, key, value) {\n      if (key in obj) {\n        Object.defineProperty(obj, key, {\n          value: value,\n          enumerable: true,\n          configurable: true,\n          writable: true\n        });\n      } else {\n        obj[key] = value;\n      }\n\n      return obj;\n    }\n\n    function _objectSpread(target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n\n        if (typeof Object.getOwnPropertySymbols === 'function') {\n          ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n            return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n          }));\n        }\n\n        ownKeys.forEach(function (key) {\n          _defineProperty(target, key, source[key]);\n        });\n      }\n\n      return target;\n    }\n\n    /*\n        DOM 操作 API\n    */\n    // 根据 html 代码片段创建 dom 对象\n    function createElemByHTML(html) {\n      var div;\n      div = document.createElement('div');\n      div.innerHTML = html;\n      return div.children;\n    } // 是否是 DOM List\n\n\n    function isDOMList(selector) {\n      if (!selector) {\n        return false;\n      }\n\n      if (selector instanceof HTMLCollection || selector instanceof NodeList) {\n        return true;\n      }\n\n      return false;\n    } // 封装 document.querySelectorAll\n\n\n    function querySelectorAll(selector) {\n      var result = document.querySelectorAll(selector);\n\n      if (isDOMList(result)) {\n        return result;\n      } else {\n        return [result];\n      }\n    } // 记录所有的事件绑定\n\n\n    var eventList = []; // 创建构造函数\n\n    function DomElement(selector) {\n      if (!selector) {\n        return;\n      } // selector 本来就是 DomElement 对象，直接返回\n\n\n      if (selector instanceof DomElement) {\n        return selector;\n      }\n\n      this.selector = selector;\n      var nodeType = selector.nodeType; // 根据 selector 得出的结果（如 DOM，DOM List）\n\n      var selectorResult = [];\n\n      if (nodeType === 9) {\n        // document 节点\n        selectorResult = [selector];\n      } else if (nodeType === 1) {\n        // 单个 DOM 节点\n        selectorResult = [selector];\n      } else if (isDOMList(selector) || selector instanceof Array) {\n        // DOM List 或者数组\n        selectorResult = selector;\n      } else if (typeof selector === 'string') {\n        // 字符串\n        selector = selector.replace('/\\n/mg', '').trim();\n\n        if (selector.indexOf('<') === 0) {\n          // 如 <div>\n          selectorResult = createElemByHTML(selector);\n        } else {\n          // 如 #id .class\n          selectorResult = querySelectorAll(selector);\n        }\n      }\n\n      var length = selectorResult.length;\n\n      if (!length) {\n        // 空数组\n        return this;\n      } // 加入 DOM 节点\n\n\n      var i;\n\n      for (i = 0; i < length; i++) {\n        this[i] = selectorResult[i];\n      }\n\n      this.length = length;\n    } // 修改原型\n\n\n    DomElement.prototype = {\n      constructor: DomElement,\n      // 类数组，forEach\n      forEach: function forEach(fn) {\n        var i;\n\n        for (i = 0; i < this.length; i++) {\n          var elem = this[i];\n          var result = fn.call(elem, elem, i);\n\n          if (result === false) {\n            break;\n          }\n        }\n\n        return this;\n      },\n      // clone\n      clone: function clone(deep) {\n        var cloneList = [];\n        this.forEach(function (elem) {\n          cloneList.push(elem.cloneNode(!!deep));\n        });\n        return $(cloneList);\n      },\n      // 获取第几个元素\n      get: function get(index) {\n        var length = this.length;\n\n        if (index >= length) {\n          index = index % length;\n        }\n\n        return $(this[index]);\n      },\n      // 第一个\n      first: function first() {\n        return this.get(0);\n      },\n      // 最后一个\n      last: function last() {\n        var length = this.length;\n        return this.get(length - 1);\n      },\n      // 绑定事件\n      on: function on(type, selector, fn) {\n        // selector 不为空，证明绑定事件要加代理\n        if (!fn) {\n          fn = selector;\n          selector = null;\n        } // type 是否有多个\n\n\n        var types = [];\n        types = type.split(/\\s+/);\n        return this.forEach(function (elem) {\n          types.forEach(function (type) {\n            if (!type) {\n              return;\n            } // 记录下，方便后面解绑\n\n\n            eventList.push({\n              elem: elem,\n              type: type,\n              fn: fn\n            });\n\n            if (!selector) {\n              // 无代理\n              elem.addEventListener(type, fn);\n              return;\n            } // 有代理\n\n\n            elem.addEventListener(type, function (e) {\n              var target = e.target;\n\n              if (target.matches(selector)) {\n                fn.call(target, e);\n              }\n            });\n          });\n        });\n      },\n      // 取消事件绑定\n      off: function off(type, fn) {\n        return this.forEach(function (elem) {\n          elem.removeEventListener(type, fn);\n        });\n      },\n      // 获取/设置 属性\n      attr: function attr(key, val) {\n        if (val == null) {\n          // 获取值\n          return this[0].getAttribute(key);\n        } else {\n          // 设置值\n          return this.forEach(function (elem) {\n            elem.setAttribute(key, val);\n          });\n        }\n      },\n      // 添加 class\n      addClass: function addClass(className) {\n        if (!className) {\n          return this;\n        }\n\n        return this.forEach(function (elem) {\n          var arr;\n\n          if (elem.className) {\n            // 解析当前 className 转换为数组\n            arr = elem.className.split(/\\s/);\n            arr = arr.filter(function (item) {\n              return !!item.trim();\n            }); // 添加 class\n\n            if (arr.indexOf(className) < 0) {\n              arr.push(className);\n            } // 修改 elem.class\n\n\n            elem.className = arr.join(' ');\n          } else {\n            elem.className = className;\n          }\n        });\n      },\n      // 删除 class\n      removeClass: function removeClass(className) {\n        if (!className) {\n          return this;\n        }\n\n        return this.forEach(function (elem) {\n          var arr;\n\n          if (elem.className) {\n            // 解析当前 className 转换为数组\n            arr = elem.className.split(/\\s/);\n            arr = arr.filter(function (item) {\n              item = item.trim(); // 删除 class\n\n              if (!item || item === className) {\n                return false;\n              }\n\n              return true;\n            }); // 修改 elem.class\n\n            elem.className = arr.join(' ');\n          }\n        });\n      },\n      // 修改 css\n      css: function css(key, val) {\n        var currentStyle = \"\".concat(key, \":\").concat(val, \";\");\n        return this.forEach(function (elem) {\n          var style = (elem.getAttribute('style') || '').trim();\n          var styleArr,\n              resultArr = [];\n\n          if (style) {\n            // 将 style 按照 ; 拆分为数组\n            styleArr = style.split(';');\n            styleArr.forEach(function (item) {\n              // 对每项样式，按照 : 拆分为 key 和 value\n              var arr = item.split(':').map(function (i) {\n                return i.trim();\n              });\n\n              if (arr.length === 2) {\n                resultArr.push(arr[0] + ':' + arr[1]);\n              }\n            }); // 替换或者新增\n\n            resultArr = resultArr.map(function (item) {\n              if (item.indexOf(key) === 0) {\n                return currentStyle;\n              } else {\n                return item;\n              }\n            });\n\n            if (resultArr.indexOf(currentStyle) < 0) {\n              resultArr.push(currentStyle);\n            } // 结果\n\n\n            elem.setAttribute('style', resultArr.join('; '));\n          } else {\n            // style 无值\n            elem.setAttribute('style', currentStyle);\n          }\n        });\n      },\n      // 显示\n      show: function show() {\n        return this.css('display', 'block');\n      },\n      // 隐藏\n      hide: function hide() {\n        return this.css('display', 'none');\n      },\n      // 获取子节点\n      children: function children() {\n        var elem = this[0];\n\n        if (!elem) {\n          return null;\n        }\n\n        return $(elem.children);\n      },\n      // 获取子节点（包括文本节点）\n      childNodes: function childNodes() {\n        var elem = this[0];\n\n        if (!elem) {\n          return null;\n        }\n\n        return $(elem.childNodes);\n      },\n      // 增加子节点\n      append: function append($children) {\n        return this.forEach(function (elem) {\n          $children.forEach(function (child) {\n            elem.appendChild(child);\n          });\n        });\n      },\n      // 移除当前节点\n      remove: function remove() {\n        return this.forEach(function (elem) {\n          if (elem.remove) {\n            elem.remove();\n          } else {\n            var parent = elem.parentElement;\n            parent && parent.removeChild(elem);\n          }\n        });\n      },\n      // 是否包含某个子节点\n      isContain: function isContain($child) {\n        var elem = this[0];\n        var child = $child[0];\n        return elem.contains(child);\n      },\n      // 尺寸数据\n      getSizeData: function getSizeData() {\n        var elem = this[0];\n        return elem.getBoundingClientRect(); // 可得到 bottom height left right top width 的数据\n      },\n      // 封装 nodeName\n      getNodeName: function getNodeName() {\n        var elem = this[0];\n        return elem.nodeName;\n      },\n      // 从当前元素查找\n      find: function find(selector) {\n        var elem = this[0];\n        return $(elem.querySelectorAll(selector));\n      },\n      // 获取当前元素的 text\n      text: function text(val) {\n        if (!val) {\n          // 获取 text\n          var elem = this[0];\n          return elem.innerHTML.replace(/<.*?>/g, function () {\n            return '';\n          });\n        } else {\n          // 设置 text\n          return this.forEach(function (elem) {\n            elem.innerHTML = val;\n          });\n        }\n      },\n      // 获取 html\n      html: function html(value) {\n        var elem = this[0];\n\n        if (value == null) {\n          return elem.innerHTML;\n        } else {\n          elem.innerHTML = value;\n          return this;\n        }\n      },\n      // 获取 value\n      val: function val() {\n        var elem = this[0];\n        return elem.value.trim();\n      },\n      // focus\n      focus: function focus() {\n        return this.forEach(function (elem) {\n          elem.focus();\n        });\n      },\n      // parent\n      parent: function parent() {\n        var elem = this[0];\n        return $(elem.parentElement);\n      },\n      // parentUntil 找到符合 selector 的父节点\n      parentUntil: function parentUntil(selector, _currentElem) {\n        var results = document.querySelectorAll(selector);\n        var length = results.length;\n\n        if (!length) {\n          // 传入的 selector 无效\n          return null;\n        }\n\n        var elem = _currentElem || this[0];\n\n        if (elem.nodeName === 'BODY') {\n          return null;\n        }\n\n        var parent = elem.parentElement;\n        var i;\n\n        for (i = 0; i < length; i++) {\n          if (parent === results[i]) {\n            // 找到，并返回\n            return $(parent);\n          }\n        } // 继续查找\n\n\n        return this.parentUntil(selector, parent);\n      },\n      // 判断两个 elem 是否相等\n      equal: function equal($elem) {\n        if ($elem.nodeType === 1) {\n          return this[0] === $elem;\n        } else {\n          return this[0] === $elem[0];\n        }\n      },\n      // 将该元素插入到某个元素前面\n      insertBefore: function insertBefore(selector) {\n        var $referenceNode = $(selector);\n        var referenceNode = $referenceNode[0];\n\n        if (!referenceNode) {\n          return this;\n        }\n\n        return this.forEach(function (elem) {\n          var parent = referenceNode.parentNode;\n          parent.insertBefore(elem, referenceNode);\n        });\n      },\n      // 将该元素插入到某个元素后面\n      insertAfter: function insertAfter(selector) {\n        var $referenceNode = $(selector);\n        var referenceNode = $referenceNode[0];\n\n        if (!referenceNode) {\n          return this;\n        }\n\n        return this.forEach(function (elem) {\n          var parent = referenceNode.parentNode;\n\n          if (parent.lastChild === referenceNode) {\n            // 最后一个元素\n            parent.appendChild(elem);\n          } else {\n            // 不是最后一个元素\n            parent.insertBefore(elem, referenceNode.nextSibling);\n          }\n        });\n      } // new 一个对象\n\n    };\n\n    function $(selector) {\n      return new DomElement(selector);\n    } // 解绑所有事件，用于销毁编辑器\n\n\n    $.offAll = function () {\n      eventList.forEach(function (item) {\n        var elem = item.elem;\n        var type = item.type;\n        var fn = item.fn; // 解绑\n\n        elem.removeEventListener(type, fn);\n      });\n    };\n\n    /*\n        配置信息\n    */\n    var config = {\n      // 默认菜单配置\n      menus: ['head', 'bold', 'fontSize', 'fontName', 'italic', 'underline', 'strikeThrough', 'foreColor', 'backColor', 'link', 'list', 'justify', 'quote', 'emoticon', 'image', 'table', 'video', 'code', 'undo', 'redo'],\n      fontNames: ['宋体', '微软雅黑', 'Arial', 'Tahoma', 'Verdana'],\n      colors: ['#000000', '#eeece0', '#1c487f', '#4d80bf', '#c24f4a', '#8baa4a', '#7b5ba1', '#46acc8', '#f9963b', '#ffffff'],\n      // // 语言配置\n      // lang: {\n      //     '设置标题': 'title',\n      //     '正文': 'p',\n      //     '链接文字': 'link text',\n      //     '链接': 'link',\n      //     '插入': 'insert',\n      //     '创建': 'init'\n      // },\n      // 表情\n      emotions: [{\n        // tab 的标题\n        title: '默认',\n        // type -> 'emoji' / 'image'\n        type: 'image',\n        // content -> 数组\n        content: [{\n          alt: '[坏笑]',\n          src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/50/pcmoren_huaixiao_org.png'\n        }, {\n          alt: '[舔屏]',\n          src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/40/pcmoren_tian_org.png'\n        }, {\n          alt: '[污]',\n          src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/3c/pcmoren_wu_org.png'\n        }]\n      }, {\n        // tab 的标题\n        title: '新浪',\n        // type -> 'emoji' / 'image'\n        type: 'image',\n        // content -> 数组\n        content: [{\n          src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/7a/shenshou_thumb.gif',\n          alt: '[草泥马]'\n        }, {\n          src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/60/horse2_thumb.gif',\n          alt: '[神马]'\n        }, {\n          src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/bc/fuyun_thumb.gif',\n          alt: '[浮云]'\n        }]\n      }, {\n        // tab 的标题\n        title: 'emoji',\n        // type -> 'emoji' / 'image'\n        type: 'emoji',\n        // content -> 数组\n        content: '😀 😃 😄 😁 😆 😅 😂 😊 😇 🙂 🙃 😉 😓 😪 😴 🙄 🤔 😬 🤐'.split(/\\s/)\n      }],\n      // 编辑区域的 z-index\n      zIndex: 10000,\n      // 是否开启 debug 模式（debug 模式下错误会 throw error 形式抛出）\n      debug: false,\n      // 插入链接时候的格式校验\n      linkCheck: function linkCheck(text, link) {\n        // text 是插入的文字\n        // link 是插入的链接\n        return true; // 返回 true 即表示成功\n        // return '校验失败' // 返回字符串即表示失败的提示信息\n      },\n      // 插入网络图片的校验\n      linkImgCheck: function linkImgCheck(src) {\n        // src 即图片的地址\n        return true; // 返回 true 即表示成功\n        // return '校验失败'  // 返回字符串即表示失败的提示信息\n      },\n      // 粘贴过滤样式，默认开启\n      pasteFilterStyle: true,\n      // 粘贴内容时，忽略图片。默认关闭\n      pasteIgnoreImg: false,\n      // 对粘贴的文字进行自定义处理，返回处理后的结果。编辑器会将处理后的结果粘贴到编辑区域中。\n      // IE 暂时不支持\n      pasteTextHandle: function pasteTextHandle(content) {\n        // content 即粘贴过来的内容（html 或 纯文本），可进行自定义处理然后返回\n        return content;\n      },\n      // onchange 事件\n      // onchange: function (html) {\n      //     // html 即变化之后的内容\n      //     console.log(html)\n      // },\n      // 是否显示添加网络图片的 tab\n      showLinkImg: true,\n      // 插入网络图片的回调\n      linkImgCallback: function linkImgCallback(url) {// console.log(url)  // url 即插入图片的地址\n      },\n      // 默认上传图片 max size: 5M\n      uploadImgMaxSize: 5 * 1024 * 1024,\n      // 配置一次最多上传几个图片\n      // uploadImgMaxLength: 5,\n      // 上传图片，是否显示 base64 格式\n      uploadImgShowBase64: false,\n      // 上传图片，server 地址（如果有值，则 base64 格式的配置则失效）\n      // uploadImgServer: '/upload',\n      // 自定义配置 filename\n      uploadFileName: '',\n      // 上传图片的自定义参数\n      uploadImgParams: {// token: 'abcdef12345'\n      },\n      // 上传图片的自定义header\n      uploadImgHeaders: {// 'Accept': 'text/x-json'\n      },\n      // 配置 XHR withCredentials\n      withCredentials: false,\n      // 自定义上传图片超时时间 ms\n      uploadImgTimeout: 10000,\n      // 上传图片 hook \n      uploadImgHooks: {\n        // customInsert: function (insertLinkImg, result, editor) {\n        //     console.log('customInsert')\n        //     // 图片上传并返回结果，自定义插入图片的事件，而不是编辑器自动插入图片\n        //     const data = result.data1 || []\n        //     data.forEach(link => {\n        //         insertLinkImg(link)\n        //     })\n        // },\n        before: function before(xhr, editor, files) {// 图片上传之前触发\n          // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\n          // return {\n          //     prevent: true,\n          //     msg: '放弃上传'\n          // }\n        },\n        success: function success(xhr, editor, result) {// 图片上传并返回结果，图片插入成功之后触发\n        },\n        fail: function fail(xhr, editor, result) {// 图片上传并返回结果，但图片插入错误时触发\n        },\n        error: function error(xhr, editor) {// 图片上传出错时触发\n        },\n        timeout: function timeout(xhr, editor) {// 图片上传超时时触发\n        }\n      },\n      // 是否上传七牛云，默认为 false\n      qiniu: false // 上传图片自定义提示方法\n      // customAlert: function (info) {\n      //     // 自定义上传提示\n      // },\n      // // 自定义上传图片\n      // customUploadImg: function (files, insert) {\n      //     // files 是 input 中选中的文件列表\n      //     // insert 是获取图片 url 后，插入到编辑器的方法\n      //     insert(imgUrl)\n      // }\n\n    };\n\n    /*\n        工具\n    */\n    // 和 UA 相关的属性\n    var UA = {\n      _ua: navigator.userAgent,\n      // 是否 webkit\n      isWebkit: function isWebkit() {\n        var reg = /webkit/i;\n        return reg.test(this._ua);\n      },\n      // 是否 IE\n      isIE: function isIE() {\n        return 'ActiveXObject' in window;\n      } // 遍历对象\n\n    };\n    function objForEach(obj, fn) {\n      var key, result;\n\n      for (key in obj) {\n        if (obj.hasOwnProperty(key)) {\n          result = fn.call(obj, key, obj[key]);\n\n          if (result === false) {\n            break;\n          }\n        }\n      }\n    } // 遍历类数组\n\n    function arrForEach(fakeArr, fn) {\n      var i, item, result;\n      var length = fakeArr.length || 0;\n\n      for (i = 0; i < length; i++) {\n        item = fakeArr[i];\n        result = fn.call(fakeArr, item, i);\n\n        if (result === false) {\n          break;\n        }\n      }\n    } // 获取随机数\n\n    function getRandom(prefix) {\n      return prefix + Math.random().toString().slice(2);\n    } // 替换 html 特殊字符\n\n    function replaceHtmlSymbol(html) {\n      if (html == null) {\n        return '';\n      }\n\n      return html.replace(/</gm, '&lt;').replace(/>/gm, '&gt;').replace(/\"/gm, '&quot;').replace(/(\\r\\n|\\r|\\n)/g, '<br/>');\n    } // 返回百分比的格式\n\n    function isFunction(fn) {\n      return typeof fn === 'function';\n    }\n\n    /*\n        bold-menu\n    */\n\n    function Bold(editor) {\n      this.editor = editor;\n      this.$elem = $(\"<div class=\\\"w-e-menu\\\">\\n            <i class=\\\"w-e-icon-bold\\\"></i>\\n        </div>\");\n      this.type = 'click'; // 当前是否 active 状态\n\n      this._active = false;\n    } // 原型\n\n\n    Bold.prototype = {\n      constructor: Bold,\n      // 点击事件\n      onClick: function onClick(e) {\n        // 点击菜单将触发这里\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n          // 选区是空的，插入并选中一个“空白”\n          editor.selection.createEmptyRange();\n        } // 执行 bold 命令\n\n\n        editor.cmd.do('bold');\n\n        if (isSeleEmpty) {\n          // 需要将选取折叠起来\n          editor.selection.collapseRange();\n          editor.selection.restoreSelection();\n        }\n      },\n      // 试图改变 active 状态\n      tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n\n        if (editor.cmd.queryCommandState('bold')) {\n          this._active = true;\n          $elem.addClass('w-e-active');\n        } else {\n          this._active = false;\n          $elem.removeClass('w-e-active');\n        }\n      }\n    };\n\n    /*\n        替换多语言\n     */\n    function replaceLang (editor, str) {\n      var langArgs = editor.config.langArgs || [];\n      var result = str;\n      langArgs.forEach(function (item) {\n        var reg = item.reg;\n        var val = item.val;\n\n        if (reg.test(result)) {\n          result = result.replace(reg, function () {\n            return val;\n          });\n        }\n      });\n      return result;\n    }\n\n    /*\n        droplist\n    */\n\n    var _emptyFn = function _emptyFn() {}; // 构造函数\n\n\n    function DropList(menu, opt) {\n      var _this = this;\n\n      // droplist 所依附的菜单\n      var editor = menu.editor;\n      this.menu = menu;\n      this.opt = opt; // 容器\n\n      var $container = $('<div class=\"w-e-droplist\"></div>'); // 标题\n\n      var $title = opt.$title;\n      var titleHtml;\n\n      if ($title) {\n        // 替换多语言\n        titleHtml = $title.html();\n        titleHtml = replaceLang(editor, titleHtml);\n        $title.html(titleHtml);\n        $title.addClass('w-e-dp-title');\n        $container.append($title);\n      }\n\n      var list = opt.list || [];\n      var type = opt.type || 'list'; // 'list' 列表形式（如“标题”菜单） / 'inline-block' 块状形式（如“颜色”菜单）\n\n      var onClick = opt.onClick || _emptyFn; // 加入 DOM 并绑定事件\n\n      var $list = $('<ul class=\"' + (type === 'list' ? 'w-e-list' : 'w-e-block') + '\"></ul>');\n      $container.append($list);\n      list.forEach(function (item) {\n        var $elem = item.$elem; // 替换多语言\n\n        var elemHtml = $elem.html();\n        elemHtml = replaceLang(editor, elemHtml);\n        $elem.html(elemHtml);\n        var value = item.value;\n        var $li = $('<li class=\"w-e-item\"></li>');\n\n        if ($elem) {\n          $li.append($elem);\n          $list.append($li);\n          $li.on('click', function (e) {\n            onClick(value); // 隐藏\n\n            _this.hideTimeoutId = setTimeout(function () {\n              _this.hide();\n            }, 0);\n          });\n        }\n      }); // 绑定隐藏事件\n\n      $container.on('mouseleave', function (e) {\n        _this.hideTimeoutId = setTimeout(function () {\n          _this.hide();\n        }, 0);\n      }); // 记录属性\n\n      this.$container = $container; // 基本属性\n\n      this._rendered = false;\n      this._show = false;\n    } // 原型\n\n\n    DropList.prototype = {\n      constructor: DropList,\n      // 显示（插入DOM）\n      show: function show() {\n        if (this.hideTimeoutId) {\n          // 清除之前的定时隐藏\n          clearTimeout(this.hideTimeoutId);\n        }\n\n        var menu = this.menu;\n        var $menuELem = menu.$elem;\n        var $container = this.$container;\n\n        if (this._show) {\n          return;\n        }\n\n        if (this._rendered) {\n          // 显示\n          $container.show();\n        } else {\n          // 加入 DOM 之前先定位位置\n          var menuHeight = $menuELem.getSizeData().height || 0;\n          var width = this.opt.width || 100; // 默认为 100\n\n          $container.css('margin-top', menuHeight + 'px').css('width', width + 'px'); // 加入到 DOM\n\n          $menuELem.append($container);\n          this._rendered = true;\n        } // 修改属性\n\n\n        this._show = true;\n      },\n      // 隐藏（移除DOM）\n      hide: function hide() {\n        if (this.showTimeoutId) {\n          // 清除之前的定时显示\n          clearTimeout(this.showTimeoutId);\n        }\n\n        var $container = this.$container;\n\n        if (!this._show) {\n          return;\n        } // 隐藏并需改属性\n\n\n        $container.hide();\n        this._show = false;\n      }\n    };\n\n    /*\n        menu - header\n    */\n\n    function Head(editor) {\n      var _this = this;\n\n      this.editor = editor;\n      this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-header\"></i></div>');\n      this.type = 'droplist'; // 当前是否 active 状态\n\n      this._active = false; // 初始化 droplist\n\n      this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>设置标题</p>'),\n        type: 'list',\n        // droplist 以列表形式展示\n        list: [{\n          $elem: $('<h1>H1</h1>'),\n          value: '<h1>'\n        }, {\n          $elem: $('<h2>H2</h2>'),\n          value: '<h2>'\n        }, {\n          $elem: $('<h3>H3</h3>'),\n          value: '<h3>'\n        }, {\n          $elem: $('<h4>H4</h4>'),\n          value: '<h4>'\n        }, {\n          $elem: $('<h5>H5</h5>'),\n          value: '<h5>'\n        }, {\n          $elem: $('<p>正文</p>'),\n          value: '<p>'\n        }],\n        onClick: function onClick(value) {\n          // 注意 this 是指向当前的 Head 对象\n          _this._command(value);\n        }\n      });\n    } // 原型\n\n\n    Head.prototype = {\n      constructor: Head,\n      // 执行命令\n      _command: function _command(value) {\n        var editor = this.editor;\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n\n        if (editor.$textElem.equal($selectionElem)) {\n          // 不能选中多行来设置标题，否则会出现问题\n          // 例如选中的是 <p>xxx</p><p>yyy</p> 来设置标题，设置之后会成为 <h1>xxx<br>yyy</h1> 不符合预期\n          return;\n        }\n\n        editor.cmd.do('formatBlock', value);\n      },\n      // 试图改变 active 状态\n      tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var reg = /^h/i;\n        var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n\n        if (reg.test(cmdValue)) {\n          this._active = true;\n          $elem.addClass('w-e-active');\n        } else {\n          this._active = false;\n          $elem.removeClass('w-e-active');\n        }\n      }\n    };\n\n    /*\n        menu - fontSize\n    */\n\n    function FontSize(editor) {\n      var _this = this;\n\n      this.editor = editor;\n      this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-text-heigh\"></i></div>');\n      this.type = 'droplist'; // 当前是否 active 状态\n\n      this._active = false; // 初始化 droplist\n\n      this.droplist = new DropList(this, {\n        width: 160,\n        $title: $('<p>字号</p>'),\n        type: 'list',\n        // droplist 以列表形式展示\n        list: [{\n          $elem: $('<span style=\"font-size: x-small;\">x-small</span>'),\n          value: '1'\n        }, {\n          $elem: $('<span style=\"font-size: small;\">small</span>'),\n          value: '2'\n        }, {\n          $elem: $('<span>normal</span>'),\n          value: '3'\n        }, {\n          $elem: $('<span style=\"font-size: large;\">large</span>'),\n          value: '4'\n        }, {\n          $elem: $('<span style=\"font-size: x-large;\">x-large</span>'),\n          value: '5'\n        }, {\n          $elem: $('<span style=\"font-size: xx-large;\">xx-large</span>'),\n          value: '6'\n        }],\n        onClick: function onClick(value) {\n          // 注意 this 是指向当前的 FontSize 对象\n          _this._command(value);\n        }\n      });\n    } // 原型\n\n\n    FontSize.prototype = {\n      constructor: FontSize,\n      // 执行命令\n      _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('fontSize', value);\n      }\n    };\n\n    /*\n        menu - fontName\n    */\n\n    function FontName(editor) {\n      var _this = this;\n\n      this.editor = editor;\n      this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-font\"></i></div>');\n      this.type = 'droplist'; // 当前是否 active 状态\n\n      this._active = false; // 获取配置的字体\n\n      var config = editor.config;\n      var fontNames = config.fontNames || []; // 初始化 droplist\n\n      this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>字体</p>'),\n        type: 'list',\n        // droplist 以列表形式展示\n        list: fontNames.map(function (fontName) {\n          return {\n            $elem: $(\"<span style=\\\"font-family: \".concat(fontName, \";\\\">\").concat(fontName, \"</span>\")),\n            value: fontName\n          };\n        }),\n        onClick: function onClick(value) {\n          // 注意 this 是指向当前的 FontName 对象\n          _this._command(value);\n        }\n      });\n    } // 原型\n\n\n    FontName.prototype = {\n      constructor: FontName,\n      _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('fontName', value);\n      }\n    };\n\n    /*\n        panel\n    */\n\n    var emptyFn = function emptyFn() {}; // 记录已经显示 panel 的菜单\n\n\n    var _isCreatedPanelMenus = []; // 构造函数\n\n    function Panel(menu, opt) {\n      this.menu = menu;\n      this.opt = opt;\n    } // 原型\n\n\n    Panel.prototype = {\n      constructor: Panel,\n      // 显示（插入DOM）\n      show: function show() {\n        var _this = this;\n\n        var menu = this.menu;\n\n        if (_isCreatedPanelMenus.indexOf(menu) >= 0) {\n          // 该菜单已经创建了 panel 不能再创建\n          return;\n        }\n\n        var editor = menu.editor;\n        var $body = $('body');\n        var $textContainerElem = editor.$textContainerElem;\n        var opt = this.opt; // panel 的容器\n\n        var $container = $('<div class=\"w-e-panel-container\"></div>');\n        var width = opt.width || 300; // 默认 300px\n\n        $container.css('width', width + 'px').css('margin-left', (0 - width) / 2 + 'px'); // 添加关闭按钮\n\n        var $closeBtn = $('<i class=\"w-e-icon-close w-e-panel-close\"></i>');\n        $container.append($closeBtn);\n        $closeBtn.on('click', function () {\n          _this.hide();\n        }); // 准备 tabs 容器\n\n        var $tabTitleContainer = $('<ul class=\"w-e-panel-tab-title\"></ul>');\n        var $tabContentContainer = $('<div class=\"w-e-panel-tab-content\"></div>');\n        $container.append($tabTitleContainer).append($tabContentContainer); // 设置高度\n\n        var height = opt.height;\n\n        if (height) {\n          $tabContentContainer.css('height', height + 'px').css('overflow-y', 'auto');\n        } // tabs\n\n\n        var tabs = opt.tabs || [];\n        var tabTitleArr = [];\n        var tabContentArr = [];\n        tabs.forEach(function (tab, tabIndex) {\n          if (!tab) {\n            return;\n          }\n\n          var title = tab.title || '';\n          var tpl = tab.tpl || ''; // 替换多语言\n\n          title = replaceLang(editor, title);\n          tpl = replaceLang(editor, tpl); // 添加到 DOM\n\n          var $title = $(\"<li class=\\\"w-e-item\\\">\".concat(title, \"</li>\"));\n          $tabTitleContainer.append($title);\n          var $content = $(tpl);\n          $tabContentContainer.append($content); // 记录到内存\n\n          $title._index = tabIndex;\n          tabTitleArr.push($title);\n          tabContentArr.push($content); // 设置 active 项\n\n          if (tabIndex === 0) {\n            $title._active = true;\n            $title.addClass('w-e-active');\n          } else {\n            $content.hide();\n          } // 绑定 tab 的事件\n\n\n          $title.on('click', function (e) {\n            if ($title._active) {\n              return;\n            } // 隐藏所有的 tab\n\n\n            tabTitleArr.forEach(function ($title) {\n              $title._active = false;\n              $title.removeClass('w-e-active');\n            });\n            tabContentArr.forEach(function ($content) {\n              $content.hide();\n            }); // 显示当前的 tab\n\n            $title._active = true;\n            $title.addClass('w-e-active');\n            $content.show();\n          });\n        }); // 绑定关闭事件\n\n        $container.on('click', function (e) {\n          // 点击时阻止冒泡\n          e.stopPropagation();\n        });\n        $body.on('click', function (e) {\n          _this.hide();\n        }); // 添加到 DOM\n\n        $textContainerElem.append($container); // 绑定 opt 的事件，只有添加到 DOM 之后才能绑定成功\n\n        tabs.forEach(function (tab, index) {\n          if (!tab) {\n            return;\n          }\n\n          var events = tab.events || [];\n          events.forEach(function (event) {\n            var selector = event.selector;\n            var type = event.type;\n            var fn = event.fn || emptyFn;\n            var $content = tabContentArr[index];\n            $content.find(selector).on(type, function (e) {\n              e.stopPropagation();\n              var needToHide = fn(e); // 执行完事件之后，是否要关闭 panel\n\n              if (needToHide) {\n                _this.hide();\n              }\n            });\n          });\n        }); // focus 第一个 elem\n\n        var $inputs = $container.find('input[type=text],textarea');\n\n        if ($inputs.length) {\n          $inputs.get(0).focus();\n        } // 添加到属性\n\n\n        this.$container = $container; // 隐藏其他 panel\n\n        this._hideOtherPanels(); // 记录该 menu 已经创建了 panel\n\n\n        _isCreatedPanelMenus.push(menu);\n      },\n      // 隐藏（移除DOM）\n      hide: function hide() {\n        var menu = this.menu;\n        var $container = this.$container;\n\n        if ($container) {\n          $container.remove();\n        } // 将该 menu 记录中移除\n\n\n        _isCreatedPanelMenus = _isCreatedPanelMenus.filter(function (item) {\n          if (item === menu) {\n            return false;\n          } else {\n            return true;\n          }\n        });\n      },\n      // 一个 panel 展示时，隐藏其他 panel\n      _hideOtherPanels: function _hideOtherPanels() {\n        if (!_isCreatedPanelMenus.length) {\n          return;\n        }\n\n        _isCreatedPanelMenus.forEach(function (menu) {\n          var panel = menu.panel || {};\n\n          if (panel.hide) {\n            panel.hide();\n          }\n        });\n      }\n    };\n\n    /*\n        menu - link\n    */\n\n    function Link(editor) {\n      this.editor = editor;\n      this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-link\"></i></div>');\n      this.type = 'panel'; // 当前是否 active 状态\n\n      this._active = false;\n    } // 原型\n\n\n    Link.prototype = {\n      constructor: Link,\n      // 点击事件\n      onClick: function onClick(e) {\n        var editor = this.editor;\n        var $linkelem;\n\n        if (this._active) {\n          // 当前选区在链接里面\n          $linkelem = editor.selection.getSelectionContainerElem();\n\n          if (!$linkelem) {\n            return;\n          } // 将该元素都包含在选取之内，以便后面整体替换\n\n\n          editor.selection.createRangeByElem($linkelem);\n          editor.selection.restoreSelection(); // 显示 panel\n\n          this._createPanel($linkelem.text(), $linkelem.attr('href'));\n        } else {\n          // 当前选区不在链接里面\n          if (editor.selection.isSelectionEmpty()) {\n            // 选区是空的，未选中内容\n            this._createPanel('', '');\n          } else {\n            // 选中内容了\n            this._createPanel(editor.selection.getSelectionText(), '');\n          }\n        }\n      },\n      // 创建 panel\n      _createPanel: function _createPanel(text, link) {\n        var _this = this;\n\n        // panel 中需要用到的id\n        var inputLinkId = getRandom('input-link');\n        var inputTextId = getRandom('input-text');\n        var btnOkId = getRandom('btn-ok');\n        var btnDelId = getRandom('btn-del'); // 是否显示“删除链接”\n\n        var delBtnDisplay = this._active ? 'inline-block' : 'none'; // 初始化并显示 panel\n\n        var panel = new Panel(this, {\n          width: 300,\n          // panel 中可包含多个 tab\n          tabs: [{\n            // tab 的标题\n            title: '链接',\n            // 模板\n            tpl: \"<div>\\n                            <input id=\\\"\".concat(inputTextId, \"\\\" type=\\\"text\\\" class=\\\"block\\\" value=\\\"\").concat(text, \"\\\" placeholder=\\\"\\u94FE\\u63A5\\u6587\\u5B57\\\"/></td>\\n                            <input id=\\\"\").concat(inputLinkId, \"\\\" type=\\\"text\\\" class=\\\"block\\\" value=\\\"\").concat(link, \"\\\" placeholder=\\\"http://...\\\"/></td>\\n                            <div class=\\\"w-e-button-container\\\">\\n                                <button id=\\\"\").concat(btnOkId, \"\\\" class=\\\"right\\\">\\u63D2\\u5165</button>\\n                                <button id=\\\"\").concat(btnDelId, \"\\\" class=\\\"gray right\\\" style=\\\"display:\").concat(delBtnDisplay, \"\\\">\\u5220\\u9664\\u94FE\\u63A5</button>\\n                            </div>\\n                        </div>\"),\n            // 事件绑定\n            events: [// 插入链接\n            {\n              selector: '#' + btnOkId,\n              type: 'click',\n              fn: function fn() {\n                // 执行插入链接\n                var $link = $('#' + inputLinkId);\n                var $text = $('#' + inputTextId);\n                var link = $link.val();\n                var text = $text.val();\n\n                _this._insertLink(text, link); // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n                return true;\n              }\n            }, // 删除链接\n            {\n              selector: '#' + btnDelId,\n              type: 'click',\n              fn: function fn() {\n                // 执行删除链接\n                _this._delLink(); // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n                return true;\n              }\n            }] // tab end\n\n          }] // tabs end\n\n        }); // 显示 panel\n\n        panel.show(); // 记录属性\n\n        this.panel = panel;\n      },\n      // 删除当前链接\n      _delLink: function _delLink() {\n        if (!this._active) {\n          return;\n        }\n\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n\n        if (!$selectionELem) {\n          return;\n        }\n\n        var selectionText = editor.selection.getSelectionText();\n        editor.cmd.do('insertHTML', '<span>' + selectionText + '</span>');\n      },\n      // 插入链接\n      _insertLink: function _insertLink(text, link) {\n        var editor = this.editor;\n        var config = editor.config;\n        var linkCheck = config.linkCheck;\n        var checkResult = true; // 默认为 true\n\n        if (linkCheck && typeof linkCheck === 'function') {\n          checkResult = linkCheck(text, link);\n        }\n\n        if (checkResult === true) {\n          editor.cmd.do('insertHTML', \"<a href=\\\"\".concat(link, \"\\\" target=\\\"_blank\\\">\").concat(text, \"</a>\"));\n        } else {\n          alert(checkResult);\n        }\n      },\n      // 试图改变 active 状态\n      tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n\n        if (!$selectionELem) {\n          return;\n        }\n\n        if ($selectionELem.getNodeName() === 'A') {\n          this._active = true;\n          $elem.addClass('w-e-active');\n        } else {\n          this._active = false;\n          $elem.removeClass('w-e-active');\n        }\n      }\n    };\n\n    /*\n        italic-menu\n    */\n\n    function Italic(editor) {\n      this.editor = editor;\n      this.$elem = $(\"<div class=\\\"w-e-menu\\\">\\n            <i class=\\\"w-e-icon-italic\\\"></i>\\n        </div>\");\n      this.type = 'click'; // 当前是否 active 状态\n\n      this._active = false;\n    } // 原型\n\n\n    Italic.prototype = {\n      constructor: Italic,\n      // 点击事件\n      onClick: function onClick(e) {\n        // 点击菜单将触发这里\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n          // 选区是空的，插入并选中一个“空白”\n          editor.selection.createEmptyRange();\n        } // 执行 italic 命令\n\n\n        editor.cmd.do('italic');\n\n        if (isSeleEmpty) {\n          // 需要将选取折叠起来\n          editor.selection.collapseRange();\n          editor.selection.restoreSelection();\n        }\n      },\n      // 试图改变 active 状态\n      tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n\n        if (editor.cmd.queryCommandState('italic')) {\n          this._active = true;\n          $elem.addClass('w-e-active');\n        } else {\n          this._active = false;\n          $elem.removeClass('w-e-active');\n        }\n      }\n    };\n\n    /*\n        redo-menu\n    */\n\n    function Redo(editor) {\n      this.editor = editor;\n      this.$elem = $(\"<div class=\\\"w-e-menu\\\">\\n            <i class=\\\"w-e-icon-redo\\\"></i>\\n        </div>\");\n      this.type = 'click'; // 当前是否 active 状态\n\n      this._active = false;\n    } // 原型\n\n\n    Redo.prototype = {\n      constructor: Redo,\n      // 点击事件\n      onClick: function onClick(e) {\n        // 点击菜单将触发这里\n        var editor = this.editor; // 执行 redo 命令\n\n        editor.cmd.do('redo');\n      }\n    };\n\n    /*\n        strikeThrough-menu\n    */\n\n    function StrikeThrough(editor) {\n      this.editor = editor;\n      this.$elem = $(\"<div class=\\\"w-e-menu\\\">\\n            <i class=\\\"w-e-icon-strikethrough\\\"></i>\\n        </div>\");\n      this.type = 'click'; // 当前是否 active 状态\n\n      this._active = false;\n    } // 原型\n\n\n    StrikeThrough.prototype = {\n      constructor: StrikeThrough,\n      // 点击事件\n      onClick: function onClick(e) {\n        // 点击菜单将触发这里\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n          // 选区是空的，插入并选中一个“空白”\n          editor.selection.createEmptyRange();\n        } // 执行 strikeThrough 命令\n\n\n        editor.cmd.do('strikeThrough');\n\n        if (isSeleEmpty) {\n          // 需要将选取折叠起来\n          editor.selection.collapseRange();\n          editor.selection.restoreSelection();\n        }\n      },\n      // 试图改变 active 状态\n      tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n\n        if (editor.cmd.queryCommandState('strikeThrough')) {\n          this._active = true;\n          $elem.addClass('w-e-active');\n        } else {\n          this._active = false;\n          $elem.removeClass('w-e-active');\n        }\n      }\n    };\n\n    /*\n        underline-menu\n    */\n\n    function Underline(editor) {\n      this.editor = editor;\n      this.$elem = $(\"<div class=\\\"w-e-menu\\\">\\n            <i class=\\\"w-e-icon-underline\\\"></i>\\n        </div>\");\n      this.type = 'click'; // 当前是否 active 状态\n\n      this._active = false;\n    } // 原型\n\n\n    Underline.prototype = {\n      constructor: Underline,\n      // 点击事件\n      onClick: function onClick(e) {\n        // 点击菜单将触发这里\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n          // 选区是空的，插入并选中一个“空白”\n          editor.selection.createEmptyRange();\n        } // 执行 underline 命令\n\n\n        editor.cmd.do('underline');\n\n        if (isSeleEmpty) {\n          // 需要将选取折叠起来\n          editor.selection.collapseRange();\n          editor.selection.restoreSelection();\n        }\n      },\n      // 试图改变 active 状态\n      tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n\n        if (editor.cmd.queryCommandState('underline')) {\n          this._active = true;\n          $elem.addClass('w-e-active');\n        } else {\n          this._active = false;\n          $elem.removeClass('w-e-active');\n        }\n      }\n    };\n\n    /*\n        undo-menu\n    */\n\n    function Undo(editor) {\n      this.editor = editor;\n      this.$elem = $(\"<div class=\\\"w-e-menu\\\">\\n            <i class=\\\"w-e-icon-undo\\\"></i>\\n        </div>\");\n      this.type = 'click'; // 当前是否 active 状态\n\n      this._active = false;\n    } // 原型\n\n\n    Undo.prototype = {\n      constructor: Undo,\n      // 点击事件\n      onClick: function onClick(e) {\n        // 点击菜单将触发这里\n        var editor = this.editor; // 执行 undo 命令\n\n        editor.cmd.do('undo');\n      }\n    };\n\n    /*\n        menu - list\n    */\n\n    function List(editor) {\n      var _this = this;\n\n      this.editor = editor;\n      this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-list2\"></i></div>');\n      this.type = 'droplist'; // 当前是否 active 状态\n\n      this._active = false; // 初始化 droplist\n\n      this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>设置列表</p>'),\n        type: 'list',\n        // droplist 以列表形式展示\n        list: [{\n          $elem: $('<span><i class=\"w-e-icon-list-numbered\"></i> 有序列表</span>'),\n          value: 'insertOrderedList'\n        }, {\n          $elem: $('<span><i class=\"w-e-icon-list2\"></i> 无序列表</span>'),\n          value: 'insertUnorderedList'\n        }],\n        onClick: function onClick(value) {\n          // 注意 this 是指向当前的 List 对象\n          _this._command(value);\n        }\n      });\n    } // 原型\n\n\n    List.prototype = {\n      constructor: List,\n      // 执行命令\n      _command: function _command(value) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        editor.selection.restoreSelection();\n\n        if (editor.cmd.queryCommandState(value)) {\n          return;\n        }\n\n        editor.cmd.do(value); // 验证列表是否被包裹在 <p> 之内\n\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n\n        if ($selectionElem.getNodeName() === 'LI') {\n          $selectionElem = $selectionElem.parent();\n        }\n\n        if (/^ol|ul$/i.test($selectionElem.getNodeName()) === false) {\n          return;\n        }\n\n        if ($selectionElem.equal($textElem)) {\n          // 证明是顶级标签，没有被 <p> 包裹\n          return;\n        }\n\n        var $parent = $selectionElem.parent();\n\n        if ($parent.equal($textElem)) {\n          // $parent 是顶级标签，不能删除\n          return;\n        }\n\n        $selectionElem.insertAfter($parent);\n        $parent.remove();\n      },\n      // 试图改变 active 状态\n      tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n\n        if (editor.cmd.queryCommandState('insertUnOrderedList') || editor.cmd.queryCommandState('insertOrderedList')) {\n          this._active = true;\n          $elem.addClass('w-e-active');\n        } else {\n          this._active = false;\n          $elem.removeClass('w-e-active');\n        }\n      }\n    };\n\n    /*\n        menu - justify\n    */\n\n    function Justify(editor) {\n      var _this = this;\n\n      this.editor = editor;\n      this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paragraph-left\"></i></div>');\n      this.type = 'droplist'; // 当前是否 active 状态\n\n      this._active = false; // 初始化 droplist\n\n      this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>对齐方式</p>'),\n        type: 'list',\n        // droplist 以列表形式展示\n        list: [{\n          $elem: $('<span><i class=\"w-e-icon-paragraph-left\"></i> 靠左</span>'),\n          value: 'justifyLeft'\n        }, {\n          $elem: $('<span><i class=\"w-e-icon-paragraph-center\"></i> 居中</span>'),\n          value: 'justifyCenter'\n        }, {\n          $elem: $('<span><i class=\"w-e-icon-paragraph-right\"></i> 靠右</span>'),\n          value: 'justifyRight'\n        }],\n        onClick: function onClick(value) {\n          // 注意 this 是指向当前的 List 对象\n          _this._command(value);\n        }\n      });\n    } // 原型\n\n\n    Justify.prototype = {\n      constructor: Justify,\n      // 执行命令\n      _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do(value);\n      }\n    };\n\n    /*\n        menu - Forecolor\n    */\n\n    function ForeColor(editor) {\n      var _this = this;\n\n      this.editor = editor;\n      this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-pencil2\"></i></div>');\n      this.type = 'droplist'; // 获取配置的颜色\n\n      var config = editor.config;\n      var colors = config.colors || []; // 当前是否 active 状态\n\n      this._active = false; // 初始化 droplist\n\n      this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>文字颜色</p>'),\n        type: 'inline-block',\n        // droplist 内容以 block 形式展示\n        list: colors.map(function (color) {\n          return {\n            $elem: $(\"<i style=\\\"color:\".concat(color, \";\\\" class=\\\"w-e-icon-pencil2\\\"></i>\")),\n            value: color\n          };\n        }),\n        onClick: function onClick(value) {\n          // 注意 this 是指向当前的 ForeColor 对象\n          _this._command(value);\n        }\n      });\n    } // 原型\n\n\n    ForeColor.prototype = {\n      constructor: ForeColor,\n      // 执行命令\n      _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('foreColor', value);\n      }\n    };\n\n    /*\n        menu - BackColor\n    */\n\n    function BackColor(editor) {\n      var _this = this;\n\n      this.editor = editor;\n      this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paint-brush\"></i></div>');\n      this.type = 'droplist'; // 获取配置的颜色\n\n      var config = editor.config;\n      var colors = config.colors || []; // 当前是否 active 状态\n\n      this._active = false; // 初始化 droplist\n\n      this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>背景色</p>'),\n        type: 'inline-block',\n        // droplist 内容以 block 形式展示\n        list: colors.map(function (color) {\n          return {\n            $elem: $(\"<i style=\\\"color:\".concat(color, \";\\\" class=\\\"w-e-icon-paint-brush\\\"></i>\")),\n            value: color\n          };\n        }),\n        onClick: function onClick(value) {\n          // 注意 this 是指向当前的 BackColor 对象\n          _this._command(value);\n        }\n      });\n    } // 原型\n\n\n    BackColor.prototype = {\n      constructor: BackColor,\n      // 执行命令\n      _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('backColor', value);\n      }\n    };\n\n    /*\n        menu - quote\n    */\n\n    function Quote(editor) {\n      this.editor = editor;\n      this.$elem = $(\"<div class=\\\"w-e-menu\\\">\\n            <i class=\\\"w-e-icon-quotes-left\\\"></i>\\n        </div>\");\n      this.type = 'click'; // 当前是否 active 状态\n\n      this._active = false;\n    } // 原型\n\n\n    Quote.prototype = {\n      constructor: Quote,\n      onClick: function onClick(e) {\n        var editor = this.editor;\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        var nodeName = $selectionElem.getNodeName();\n\n        if (!UA.isIE()) {\n          if (nodeName === 'BLOCKQUOTE') {\n            // 撤销 quote\n            editor.cmd.do('formatBlock', '<P>');\n          } else {\n            // 转换为 quote\n            editor.cmd.do('formatBlock', '<BLOCKQUOTE>');\n          }\n\n          return;\n        } // IE 中不支持 formatBlock <BLOCKQUOTE> ，要用其他方式兼容\n\n\n        var content, $targetELem;\n\n        if (nodeName === 'P') {\n          // 将 P 转换为 quote\n          content = $selectionElem.text();\n          $targetELem = $(\"<blockquote>\".concat(content, \"</blockquote>\"));\n          $targetELem.insertAfter($selectionElem);\n          $selectionElem.remove();\n          return;\n        }\n\n        if (nodeName === 'BLOCKQUOTE') {\n          // 撤销 quote\n          content = $selectionElem.text();\n          $targetELem = $(\"<p>\".concat(content, \"</p>\"));\n          $targetELem.insertAfter($selectionElem);\n          $selectionElem.remove();\n        }\n      },\n      tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var reg = /^BLOCKQUOTE$/i;\n        var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n\n        if (reg.test(cmdValue)) {\n          this._active = true;\n          $elem.addClass('w-e-active');\n        } else {\n          this._active = false;\n          $elem.removeClass('w-e-active');\n        }\n      }\n    };\n\n    /*\n        menu - code\n    */\n\n    function Code(editor) {\n      this.editor = editor;\n      this.$elem = $(\"<div class=\\\"w-e-menu\\\">\\n            <i class=\\\"w-e-icon-terminal\\\"></i>\\n        </div>\");\n      this.type = 'panel'; // 当前是否 active 状态\n\n      this._active = false;\n    } // 原型\n\n\n    Code.prototype = {\n      constructor: Code,\n      onClick: function onClick(e) {\n        var editor = this.editor;\n        var $startElem = editor.selection.getSelectionStartElem();\n        var $endElem = editor.selection.getSelectionEndElem();\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n        var selectionText = editor.selection.getSelectionText();\n        var $code;\n\n        if (!$startElem.equal($endElem)) {\n          // 跨元素选择，不做处理\n          editor.selection.restoreSelection();\n          return;\n        }\n\n        if (!isSeleEmpty) {\n          // 选取不是空，用 <code> 包裹即可\n          $code = $(\"<code>\".concat(selectionText, \"</code>\"));\n          editor.cmd.do('insertElem', $code);\n          editor.selection.createRangeByElem($code, false);\n          editor.selection.restoreSelection();\n          return;\n        } // 选取是空，且没有夸元素选择，则插入 <pre><code></code></prev>\n\n\n        if (this._active) {\n          // 选中状态，将编辑内容\n          this._createPanel($startElem.html());\n        } else {\n          // 未选中状态，将创建内容\n          this._createPanel();\n        }\n      },\n      _createPanel: function _createPanel(value) {\n        var _this = this;\n\n        // value - 要编辑的内容\n        value = value || '';\n        var type = !value ? 'new' : 'edit';\n        var textId = getRandom('texxt');\n        var btnId = getRandom('btn');\n        var panel = new Panel(this, {\n          width: 500,\n          // 一个 Panel 包含多个 tab\n          tabs: [{\n            // 标题\n            title: '插入代码',\n            // 模板\n            tpl: \"<div>\\n                        <textarea id=\\\"\".concat(textId, \"\\\" style=\\\"height:145px;;\\\">\").concat(value, \"</textarea>\\n                        <div class=\\\"w-e-button-container\\\">\\n                            <button id=\\\"\").concat(btnId, \"\\\" class=\\\"right\\\">\\u63D2\\u5165</button>\\n                        </div>\\n                    <div>\"),\n            // 事件绑定\n            events: [// 插入代码\n            {\n              selector: '#' + btnId,\n              type: 'click',\n              fn: function fn() {\n                var $text = $('#' + textId);\n                var text = $text.val() || $text.html();\n                text = replaceHtmlSymbol(text);\n\n                if (type === 'new') {\n                  // 新插入\n                  _this._insertCode(text);\n                } else {\n                  // 编辑更新\n                  _this._updateCode(text);\n                } // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n                return true;\n              }\n            }] // first tab end\n\n          }] // tabs end\n\n        }); // new Panel end\n        // 显示 panel\n\n        panel.show(); // 记录属性\n\n        this.panel = panel;\n      },\n      // 插入代码\n      _insertCode: function _insertCode(value) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', \"<pre><code>\".concat(value, \"</code></pre><p><br></p>\"));\n      },\n      // 更新代码\n      _updateCode: function _updateCode(value) {\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n\n        if (!$selectionELem) {\n          return;\n        }\n\n        $selectionELem.html(value);\n        editor.selection.restoreSelection();\n      },\n      // 试图改变 active 状态\n      tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n\n        if (!$selectionELem) {\n          return;\n        }\n\n        var $parentElem = $selectionELem.parent();\n\n        if ($selectionELem.getNodeName() === 'CODE' && $parentElem.getNodeName() === 'PRE') {\n          this._active = true;\n          $elem.addClass('w-e-active');\n        } else {\n          this._active = false;\n          $elem.removeClass('w-e-active');\n        }\n      }\n    };\n\n    /*\n        menu - emoticon\n    */\n\n    function Emoticon(editor) {\n      this.editor = editor;\n      this.$elem = $(\"<div class=\\\"w-e-menu\\\">\\n            <i class=\\\"w-e-icon-happy\\\"></i>\\n        </div>\");\n      this.type = 'panel'; // 当前是否 active 状态\n\n      this._active = false;\n    } // 原型\n\n\n    Emoticon.prototype = {\n      constructor: Emoticon,\n      onClick: function onClick() {\n        this._createPanel();\n      },\n      _createPanel: function _createPanel() {\n        var _this = this;\n\n        var editor = this.editor;\n        var config = editor.config; // 获取表情配置\n\n        var emotions = config.emotions || []; // 创建表情 dropPanel 的配置\n\n        var tabConfig = [];\n        emotions.forEach(function (emotData) {\n          var emotType = emotData.type;\n          var content = emotData.content || []; // 这一组表情最终拼接出来的 html\n\n          var faceHtml = ''; // emoji 表情\n\n          if (emotType === 'emoji') {\n            content.forEach(function (item) {\n              if (item) {\n                faceHtml += '<span class=\"w-e-item\">' + item + '</span>';\n              }\n            });\n          } // 图片表情\n\n\n          if (emotType === 'image') {\n            content.forEach(function (item) {\n              var src = item.src;\n              var alt = item.alt;\n\n              if (src) {\n                // 加一个 data-w-e 属性，点击图片的时候不再提示编辑图片\n                faceHtml += '<span class=\"w-e-item\"><img src=\"' + src + '\" alt=\"' + alt + '\" data-w-e=\"1\"/></span>';\n              }\n            });\n          }\n\n          tabConfig.push({\n            title: emotData.title,\n            tpl: \"<div class=\\\"w-e-emoticon-container\\\">\".concat(faceHtml, \"</div>\"),\n            events: [{\n              selector: 'span.w-e-item',\n              type: 'click',\n              fn: function fn(e) {\n                var target = e.target;\n                var $target = $(target);\n                var nodeName = $target.getNodeName();\n                var insertHtml;\n\n                if (nodeName === 'IMG') {\n                  // 插入图片\n                  insertHtml = $target.parent().html();\n                } else {\n                  // 插入 emoji\n                  insertHtml = '<span>' + $target.html() + '</span>';\n                }\n\n                _this._insert(insertHtml); // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n                return true;\n              }\n            }]\n          });\n        });\n        var panel = new Panel(this, {\n          width: 300,\n          height: 200,\n          // 一个 Panel 包含多个 tab\n          tabs: tabConfig\n        }); // 显示 panel\n\n        panel.show(); // 记录属性\n\n        this.panel = panel;\n      },\n      // 插入表情\n      _insert: function _insert(emotHtml) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', emotHtml);\n      }\n    };\n\n    /*\n        menu - table\n    */\n\n    function Table(editor) {\n      this.editor = editor;\n      this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-table2\"></i></div>');\n      this.type = 'panel'; // 当前是否 active 状态\n\n      this._active = false;\n    } // 原型\n\n\n    Table.prototype = {\n      constructor: Table,\n      onClick: function onClick() {\n        if (this._active) {\n          // 编辑现有表格\n          this._createEditPanel();\n        } else {\n          // 插入新表格\n          this._createInsertPanel();\n        }\n      },\n      // 创建插入新表格的 panel\n      _createInsertPanel: function _createInsertPanel() {\n        var _this = this;\n\n        // 用到的 id\n        var btnInsertId = getRandom('btn');\n        var textRowNum = getRandom('row');\n        var textColNum = getRandom('col');\n        var panel = new Panel(this, {\n          width: 250,\n          // panel 包含多个 tab\n          tabs: [{\n            // 标题\n            title: '插入表格',\n            // 模板\n            tpl: \"<div>\\n                        <p style=\\\"text-align:left; padding:5px 0;\\\">\\n                            \\u521B\\u5EFA\\n                            <input id=\\\"\".concat(textRowNum, \"\\\" type=\\\"text\\\" value=\\\"5\\\" style=\\\"width:40px;text-align:center;\\\"/>\\n                            \\u884C\\n                            <input id=\\\"\").concat(textColNum, \"\\\" type=\\\"text\\\" value=\\\"5\\\" style=\\\"width:40px;text-align:center;\\\"/>\\n                            \\u5217\\u7684\\u8868\\u683C\\n                        </p>\\n                        <div class=\\\"w-e-button-container\\\">\\n                            <button id=\\\"\").concat(btnInsertId, \"\\\" class=\\\"right\\\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>\"),\n            // 事件绑定\n            events: [{\n              // 点击按钮，插入表格\n              selector: '#' + btnInsertId,\n              type: 'click',\n              fn: function fn() {\n                var rowNum = parseInt($('#' + textRowNum).val());\n                var colNum = parseInt($('#' + textColNum).val());\n\n                if (rowNum && colNum && rowNum > 0 && colNum > 0) {\n                  // form 数据有效\n                  _this._insert(rowNum, colNum);\n                } // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n                return true;\n              }\n            }] // first tab end\n\n          }] // tabs end\n\n        }); // panel end\n        // 展示 panel\n\n        panel.show(); // 记录属性\n\n        this.panel = panel;\n      },\n      // 插入表格\n      _insert: function _insert(rowNum, colNum) {\n        // 拼接 table 模板\n        var r, c;\n        var html = '<table border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">';\n\n        for (r = 0; r < rowNum; r++) {\n          html += '<tr>';\n\n          if (r === 0) {\n            for (c = 0; c < colNum; c++) {\n              html += '<th>&nbsp;</th>';\n            }\n          } else {\n            for (c = 0; c < colNum; c++) {\n              html += '<td>&nbsp;</td>';\n            }\n          }\n\n          html += '</tr>';\n        }\n\n        html += '</table><p><br></p>'; // 执行命令\n\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', html); // 防止 firefox 下出现 resize 的控制点\n\n        editor.cmd.do('enableObjectResizing', false);\n        editor.cmd.do('enableInlineTableEditing', false);\n      },\n      // 创建编辑表格的 panel\n      _createEditPanel: function _createEditPanel() {\n        var _this2 = this;\n\n        // 可用的 id\n        var addRowBtnId = getRandom('add-row');\n        var addColBtnId = getRandom('add-col');\n        var delRowBtnId = getRandom('del-row');\n        var delColBtnId = getRandom('del-col');\n        var delTableBtnId = getRandom('del-table'); // 创建 panel 对象\n\n        var panel = new Panel(this, {\n          width: 320,\n          // panel 包含多个 tab\n          tabs: [{\n            // 标题\n            title: '编辑表格',\n            // 模板\n            tpl: \"<div>\\n                        <div class=\\\"w-e-button-container\\\" style=\\\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\\\">\\n                            <button id=\\\"\".concat(addRowBtnId, \"\\\" class=\\\"left\\\">\\u589E\\u52A0\\u884C</button>\\n                            <button id=\\\"\").concat(delRowBtnId, \"\\\" class=\\\"red left\\\">\\u5220\\u9664\\u884C</button>\\n                            <button id=\\\"\").concat(addColBtnId, \"\\\" class=\\\"left\\\">\\u589E\\u52A0\\u5217</button>\\n                            <button id=\\\"\").concat(delColBtnId, \"\\\" class=\\\"red left\\\">\\u5220\\u9664\\u5217</button>\\n                        </div>\\n                        <div class=\\\"w-e-button-container\\\">\\n                            <button id=\\\"\").concat(delTableBtnId, \"\\\" class=\\\"gray left\\\">\\u5220\\u9664\\u8868\\u683C</button>\\n                        </dv>\\n                    </div>\"),\n            // 事件绑定\n            events: [{\n              // 增加行\n              selector: '#' + addRowBtnId,\n              type: 'click',\n              fn: function fn() {\n                _this2._addRow(); // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n                return true;\n              }\n            }, {\n              // 增加列\n              selector: '#' + addColBtnId,\n              type: 'click',\n              fn: function fn() {\n                _this2._addCol(); // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n                return true;\n              }\n            }, {\n              // 删除行\n              selector: '#' + delRowBtnId,\n              type: 'click',\n              fn: function fn() {\n                _this2._delRow(); // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n                return true;\n              }\n            }, {\n              // 删除列\n              selector: '#' + delColBtnId,\n              type: 'click',\n              fn: function fn() {\n                _this2._delCol(); // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n                return true;\n              }\n            }, {\n              // 删除表格\n              selector: '#' + delTableBtnId,\n              type: 'click',\n              fn: function fn() {\n                _this2._delTable(); // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n                return true;\n              }\n            }]\n          }]\n        }); // 显示 panel\n\n        panel.show();\n      },\n      // 获取选中的单元格的位置信息\n      _getLocationData: function _getLocationData() {\n        var result = {};\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n\n        if (!$selectionELem) {\n          return;\n        }\n\n        var nodeName = $selectionELem.getNodeName();\n\n        if (nodeName !== 'TD' && nodeName !== 'TH') {\n          return;\n        } // 获取 td index\n\n\n        var $tr = $selectionELem.parent();\n        var $tds = $tr.children();\n        var tdLength = $tds.length;\n        $tds.forEach(function (td, index) {\n          if (td === $selectionELem[0]) {\n            // 记录并跳出循环\n            result.td = {\n              index: index,\n              elem: td,\n              length: tdLength\n            };\n            return false;\n          }\n        }); // 获取 tr index\n\n        var $tbody = $tr.parent();\n        var $trs = $tbody.children();\n        var trLength = $trs.length;\n        $trs.forEach(function (tr, index) {\n          if (tr === $tr[0]) {\n            // 记录并跳出循环\n            result.tr = {\n              index: index,\n              elem: tr,\n              length: trLength\n            };\n            return false;\n          }\n        }); // 返回结果\n\n        return result;\n      },\n      // 增加行\n      _addRow: function _addRow() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n\n        if (!locationData) {\n          return;\n        }\n\n        var trData = locationData.tr;\n        var $currentTr = $(trData.elem);\n        var tdData = locationData.td;\n        var tdLength = tdData.length; // 拼接即将插入的字符串\n\n        var newTr = document.createElement('tr');\n        var tpl = '',\n            i;\n\n        for (i = 0; i < tdLength; i++) {\n          tpl += '<td>&nbsp;</td>';\n        }\n\n        newTr.innerHTML = tpl; // 插入\n\n        $(newTr).insertAfter($currentTr);\n      },\n      // 增加列\n      _addCol: function _addCol() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n\n        if (!locationData) {\n          return;\n        }\n\n        var trData = locationData.tr;\n        var tdData = locationData.td;\n        var tdIndex = tdData.index;\n        var $currentTr = $(trData.elem);\n        var $trParent = $currentTr.parent();\n        var $trs = $trParent.children(); // 遍历所有行\n\n        $trs.forEach(function (tr) {\n          var $tr = $(tr);\n          var $tds = $tr.children();\n          var $currentTd = $tds.get(tdIndex);\n          var name = $currentTd.getNodeName().toLowerCase(); // new 一个 td，并插入\n\n          var newTd = document.createElement(name);\n          $(newTd).insertAfter($currentTd);\n        });\n      },\n      // 删除行\n      _delRow: function _delRow() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n\n        if (!locationData) {\n          return;\n        }\n\n        var trData = locationData.tr;\n        var $currentTr = $(trData.elem);\n        $currentTr.remove();\n      },\n      // 删除列\n      _delCol: function _delCol() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n\n        if (!locationData) {\n          return;\n        }\n\n        var trData = locationData.tr;\n        var tdData = locationData.td;\n        var tdIndex = tdData.index;\n        var $currentTr = $(trData.elem);\n        var $trParent = $currentTr.parent();\n        var $trs = $trParent.children(); // 遍历所有行\n\n        $trs.forEach(function (tr) {\n          var $tr = $(tr);\n          var $tds = $tr.children();\n          var $currentTd = $tds.get(tdIndex); // 删除\n\n          $currentTd.remove();\n        });\n      },\n      // 删除表格\n      _delTable: function _delTable() {\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n\n        if (!$selectionELem) {\n          return;\n        }\n\n        var $table = $selectionELem.parentUntil('table');\n\n        if (!$table) {\n          return;\n        }\n\n        $table.remove();\n      },\n      // 试图改变 active 状态\n      tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n\n        if (!$selectionELem) {\n          return;\n        }\n\n        var nodeName = $selectionELem.getNodeName();\n\n        if (nodeName === 'TD' || nodeName === 'TH') {\n          this._active = true;\n          $elem.addClass('w-e-active');\n        } else {\n          this._active = false;\n          $elem.removeClass('w-e-active');\n        }\n      }\n    };\n\n    /*\n        menu - video\n    */\n\n    function Video(editor) {\n      this.editor = editor;\n      this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-play\"></i></div>');\n      this.type = 'panel'; // 当前是否 active 状态\n\n      this._active = false;\n    } // 原型\n\n\n    Video.prototype = {\n      constructor: Video,\n      onClick: function onClick() {\n        this._createPanel();\n      },\n      _createPanel: function _createPanel() {\n        var _this = this;\n\n        // 创建 id\n        var textValId = getRandom('text-val');\n        var btnId = getRandom('btn'); // 创建 panel\n\n        var panel = new Panel(this, {\n          width: 350,\n          // 一个 panel 多个 tab\n          tabs: [{\n            // 标题\n            title: '插入视频',\n            // 模板\n            tpl: \"<div>\\n                        <input id=\\\"\".concat(textValId, \"\\\" type=\\\"text\\\" class=\\\"block\\\" placeholder=\\\"\\u683C\\u5F0F\\u5982\\uFF1A<iframe src=... ></iframe>\\\"/>\\n                        <div class=\\\"w-e-button-container\\\">\\n                            <button id=\\\"\").concat(btnId, \"\\\" class=\\\"right\\\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>\"),\n            // 事件绑定\n            events: [{\n              selector: '#' + btnId,\n              type: 'click',\n              fn: function fn() {\n                var $text = $('#' + textValId);\n                var val = $text.val().trim(); // 测试用视频地址\n                // <iframe height=498 width=510 src='http://player.youku.com/embed/XMjcwMzc3MzM3Mg==' frameborder=0 'allowfullscreen'></iframe>\n\n                if (val) {\n                  // 插入视频\n                  _this._insert(val);\n                } // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n                return true;\n              }\n            }] // first tab end\n\n          }] // tabs end\n\n        }); // panel end\n        // 显示 panel\n\n        panel.show(); // 记录属性\n\n        this.panel = panel;\n      },\n      // 插入视频\n      _insert: function _insert(val) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', val + '<p><br></p>');\n      }\n    };\n\n    /*\n        menu - img\n    */\n\n    function Image(editor) {\n      this.editor = editor;\n      var imgMenuId = getRandom('w-e-img');\n      this.$elem = $('<div class=\"w-e-menu\" id=\"' + imgMenuId + '\"><i class=\"w-e-icon-image\"></i></div>');\n      editor.imgMenuId = imgMenuId;\n      this.type = 'panel'; // 当前是否 active 状态\n\n      this._active = false;\n    } // 原型\n\n\n    Image.prototype = {\n      constructor: Image,\n      onClick: function onClick() {\n        var editor = this.editor;\n        var config = editor.config;\n\n        if (config.qiniu) {\n          return;\n        }\n\n        if (this._active) {\n          this._createEditPanel();\n        } else {\n          this._createInsertPanel();\n        }\n      },\n      _createEditPanel: function _createEditPanel() {\n        var editor = this.editor; // id\n\n        var width30 = getRandom('width-30');\n        var width50 = getRandom('width-50');\n        var width100 = getRandom('width-100');\n        var delBtn = getRandom('del-btn'); // tab 配置\n\n        var tabsConfig = [{\n          title: '编辑图片',\n          tpl: \"<div>\\n                    <div class=\\\"w-e-button-container\\\" style=\\\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\\\">\\n                        <span style=\\\"float:left;font-size:14px;margin:4px 5px 0 5px;color:#333;\\\">\\u6700\\u5927\\u5BBD\\u5EA6\\uFF1A</span>\\n                        <button id=\\\"\".concat(width30, \"\\\" class=\\\"left\\\">30%</button>\\n                        <button id=\\\"\").concat(width50, \"\\\" class=\\\"left\\\">50%</button>\\n                        <button id=\\\"\").concat(width100, \"\\\" class=\\\"left\\\">100%</button>\\n                    </div>\\n                    <div class=\\\"w-e-button-container\\\">\\n                        <button id=\\\"\").concat(delBtn, \"\\\" class=\\\"gray left\\\">\\u5220\\u9664\\u56FE\\u7247</button>\\n                    </dv>\\n                </div>\"),\n          events: [{\n            selector: '#' + width30,\n            type: 'click',\n            fn: function fn() {\n              var $img = editor._selectedImg;\n\n              if ($img) {\n                $img.css('max-width', '30%');\n              } // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }, {\n            selector: '#' + width50,\n            type: 'click',\n            fn: function fn() {\n              var $img = editor._selectedImg;\n\n              if ($img) {\n                $img.css('max-width', '50%');\n              } // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }, {\n            selector: '#' + width100,\n            type: 'click',\n            fn: function fn() {\n              var $img = editor._selectedImg;\n\n              if ($img) {\n                $img.css('max-width', '100%');\n              } // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }, {\n            selector: '#' + delBtn,\n            type: 'click',\n            fn: function fn() {\n              var $img = editor._selectedImg;\n\n              if ($img) {\n                $img.remove();\n              } // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }]\n        }]; // 创建 panel 并显示\n\n        var panel = new Panel(this, {\n          width: 300,\n          tabs: tabsConfig\n        });\n        panel.show(); // 记录属性\n\n        this.panel = panel;\n      },\n      _createInsertPanel: function _createInsertPanel() {\n        var editor = this.editor;\n        var uploadImg = editor.uploadImg;\n        var config = editor.config; // id\n\n        var upTriggerId = getRandom('up-trigger');\n        var upFileId = getRandom('up-file');\n        var linkUrlId = getRandom('link-url');\n        var linkBtnId = getRandom('link-btn'); // tabs 的配置\n\n        var tabsConfig = [{\n          title: '上传图片',\n          tpl: \"<div class=\\\"w-e-up-img-container\\\">\\n                    <div id=\\\"\".concat(upTriggerId, \"\\\" class=\\\"w-e-up-btn\\\">\\n                        <i class=\\\"w-e-icon-upload2\\\"></i>\\n                    </div>\\n                    <div style=\\\"display:none;\\\">\\n                        <input id=\\\"\").concat(upFileId, \"\\\" type=\\\"file\\\" multiple=\\\"multiple\\\" accept=\\\"image/jpg,image/jpeg,image/png,image/gif,image/bmp\\\"/>\\n                    </div>\\n                </div>\"),\n          events: [{\n            // 触发选择图片\n            selector: '#' + upTriggerId,\n            type: 'click',\n            fn: function fn() {\n              var $file = $('#' + upFileId);\n              var fileElem = $file[0];\n\n              if (fileElem) {\n                fileElem.click();\n              } else {\n                // 返回 true 可关闭 panel\n                return true;\n              }\n            }\n          }, {\n            // 选择图片完毕\n            selector: '#' + upFileId,\n            type: 'change',\n            fn: function fn() {\n              var $file = $('#' + upFileId);\n              var fileElem = $file[0];\n\n              if (!fileElem) {\n                // 返回 true 可关闭 panel\n                return true;\n              } // 获取选中的 file 对象列表\n\n\n              var fileList = fileElem.files;\n\n              if (fileList.length) {\n                uploadImg.uploadImg(fileList);\n              } // 返回 true 可关闭 panel\n\n\n              return true;\n            }\n          }]\n        }, // first tab end\n        {\n          title: '网络图片',\n          tpl: \"<div>\\n                    <input id=\\\"\".concat(linkUrlId, \"\\\" type=\\\"text\\\" class=\\\"block\\\" placeholder=\\\"\\u56FE\\u7247\\u94FE\\u63A5\\\"/></td>\\n                    <div class=\\\"w-e-button-container\\\">\\n                        <button id=\\\"\").concat(linkBtnId, \"\\\" class=\\\"right\\\">\\u63D2\\u5165</button>\\n                    </div>\\n                </div>\"),\n          events: [{\n            selector: '#' + linkBtnId,\n            type: 'click',\n            fn: function fn() {\n              var $linkUrl = $('#' + linkUrlId);\n              var url = $linkUrl.val().trim();\n\n              if (url) {\n                uploadImg.insertLinkImg(url);\n              } // 返回 true 表示函数执行结束之后关闭 panel\n\n\n              return true;\n            }\n          }] // second tab end\n\n        }]; // tabs end\n        // 判断 tabs 的显示\n\n        var tabsConfigResult = [];\n\n        if ((config.uploadImgShowBase64 || config.uploadImgServer || config.customUploadImg) && window.FileReader) {\n          // 显示“上传图片”\n          tabsConfigResult.push(tabsConfig[0]);\n        }\n\n        if (config.showLinkImg) {\n          // 显示“网络图片”\n          tabsConfigResult.push(tabsConfig[1]);\n        } // 创建 panel 并显示\n\n\n        var panel = new Panel(this, {\n          width: 300,\n          tabs: tabsConfigResult\n        });\n        panel.show(); // 记录属性\n\n        this.panel = panel;\n      },\n      // 试图改变 active 状态\n      tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n\n        if (editor._selectedImg) {\n          this._active = true;\n          $elem.addClass('w-e-active');\n        } else {\n          this._active = false;\n          $elem.removeClass('w-e-active');\n        }\n      }\n    };\n\n    /*\n        所有菜单的汇总\n    */\n    // 存储菜单的构造函数\n    var MenuConstructors = {};\n    MenuConstructors.bold = Bold;\n    MenuConstructors.head = Head;\n    MenuConstructors.fontSize = FontSize;\n    MenuConstructors.fontName = FontName;\n    MenuConstructors.link = Link;\n    MenuConstructors.italic = Italic;\n    MenuConstructors.redo = Redo;\n    MenuConstructors.strikeThrough = StrikeThrough;\n    MenuConstructors.underline = Underline;\n    MenuConstructors.undo = Undo;\n    MenuConstructors.list = List;\n    MenuConstructors.justify = Justify;\n    MenuConstructors.foreColor = ForeColor;\n    MenuConstructors.backColor = BackColor;\n    MenuConstructors.quote = Quote;\n    MenuConstructors.code = Code;\n    MenuConstructors.emoticon = Emoticon;\n    MenuConstructors.table = Table;\n    MenuConstructors.video = Video;\n    MenuConstructors.image = Image; // 吐出所有菜单集合\n\n    /*\n        菜单集合\n    */\n\n    function Menus(editor) {\n      this.editor = editor;\n      this.menus = {};\n    } // 修改原型\n\n\n    Menus.prototype = {\n      constructor: Menus,\n      // 初始化菜单\n      init: function init() {\n        var _this = this;\n\n        var editor = this.editor;\n        var config = editor.config || {};\n        var configMenus = config.menus || []; // 获取配置中的菜单\n        // 根据配置信息，创建菜单\n\n        configMenus.forEach(function (menuKey) {\n          var MenuConstructor = MenuConstructors[menuKey];\n\n          if (MenuConstructor && typeof MenuConstructor === 'function') {\n            // 创建单个菜单\n            _this.menus[menuKey] = new MenuConstructor(editor);\n          }\n        }); // 添加到菜单栏\n\n        this._addToToolbar(); // 绑定事件\n\n\n        this._bindEvent();\n      },\n      // 添加到菜单栏\n      _addToToolbar: function _addToToolbar() {\n        var editor = this.editor;\n        var $toolbarElem = editor.$toolbarElem;\n        var menus = this.menus;\n        var config = editor.config; // config.zIndex 是配置的编辑区域的 z-index，菜单的 z-index 得在其基础上 +1\n\n        var zIndex = config.zIndex + 1;\n        objForEach(menus, function (key, menu) {\n          var $elem = menu.$elem;\n\n          if ($elem) {\n            // 设置 z-index\n            $elem.css('z-index', zIndex);\n            $toolbarElem.append($elem);\n          }\n        });\n      },\n      // 绑定菜单 click mouseenter 事件\n      _bindEvent: function _bindEvent() {\n        var menus = this.menus;\n        var editor = this.editor;\n        objForEach(menus, function (key, menu) {\n          var type = menu.type;\n\n          if (!type) {\n            return;\n          }\n\n          var $elem = menu.$elem;\n          var droplist = menu.droplist;\n          var panel = menu.panel; // 点击类型，例如 bold\n\n          if (type === 'click' && menu.onClick) {\n            $elem.on('click', function (e) {\n              if (editor.selection.getRange() == null) {\n                return;\n              }\n\n              menu.onClick(e);\n            });\n          } // 下拉框，例如 head\n\n\n          if (type === 'droplist' && droplist) {\n            $elem.on('mouseenter', function (e) {\n              if (editor.selection.getRange() == null) {\n                return;\n              } // 显示\n\n\n              droplist.showTimeoutId = setTimeout(function () {\n                droplist.show();\n              }, 200);\n            }).on('mouseleave', function (e) {\n              // 隐藏\n              droplist.hideTimeoutId = setTimeout(function () {\n                droplist.hide();\n              }, 0);\n            });\n          } // 弹框类型，例如 link\n\n\n          if (type === 'panel' && menu.onClick) {\n            $elem.on('click', function (e) {\n              e.stopPropagation();\n\n              if (editor.selection.getRange() == null) {\n                return;\n              } // 在自定义事件中显示 panel\n\n\n              menu.onClick(e);\n            });\n          }\n        });\n      },\n      // 尝试修改菜单状态\n      changeActive: function changeActive() {\n        var menus = this.menus;\n        objForEach(menus, function (key, menu) {\n          if (menu.tryChangeActive) {\n            setTimeout(function () {\n              menu.tryChangeActive();\n            }, 100);\n          }\n        });\n      }\n    };\n\n    /*\n        粘贴信息的处理\n    */\n\n    function getPasteText(e) {\n      var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\n      var pasteText;\n\n      if (clipboardData == null) {\n        pasteText = window.clipboardData && window.clipboardData.getData('text');\n      } else {\n        pasteText = clipboardData.getData('text/plain');\n      }\n\n      return replaceHtmlSymbol(pasteText);\n    } // 获取粘贴的html\n\n    function getPasteHtml(e, filterStyle, ignoreImg) {\n      var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\n      var pasteText, pasteHtml;\n\n      if (clipboardData == null) {\n        pasteText = window.clipboardData && window.clipboardData.getData('text');\n      } else {\n        pasteText = clipboardData.getData('text/plain');\n        pasteHtml = clipboardData.getData('text/html');\n      }\n\n      if (!pasteHtml && pasteText) {\n        pasteHtml = '<p>' + replaceHtmlSymbol(pasteText) + '</p>';\n      }\n\n      if (!pasteHtml) {\n        return;\n      } // 过滤word中状态过来的无用字符\n\n\n      var docSplitHtml = pasteHtml.split('</html>');\n\n      if (docSplitHtml.length === 2) {\n        pasteHtml = docSplitHtml[0];\n      } // 过滤无用标签\n\n\n      pasteHtml = pasteHtml.replace(/<(meta|script|link).+?>/igm, ''); // 去掉注释\n\n      pasteHtml = pasteHtml.replace(/<!--.*?-->/mg, ''); // 过滤 data-xxx 属性\n\n      pasteHtml = pasteHtml.replace(/\\s?data-.+?=('|\").+?('|\")/igm, '');\n\n      if (ignoreImg) {\n        // 忽略图片\n        pasteHtml = pasteHtml.replace(/<img.+?>/igm, '');\n      }\n\n      if (filterStyle) {\n        // 过滤样式\n        pasteHtml = pasteHtml.replace(/\\s?(class|style)=('|\").*?('|\")/igm, '');\n      } else {\n        // 保留样式\n        pasteHtml = pasteHtml.replace(/\\s?class=('|\").*?('|\")/igm, '');\n      }\n\n      return pasteHtml;\n    } // 获取粘贴的图片文件\n\n    function getPasteImgs(e) {\n      var result = [];\n      var txt = getPasteText(e);\n\n      if (txt) {\n        // 有文字，就忽略图片\n        return result;\n      }\n\n      var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData || {};\n      var items = clipboardData.items;\n\n      if (!items) {\n        return result;\n      }\n\n      objForEach(items, function (key, value) {\n        var type = value.type;\n\n        if (/image/i.test(type)) {\n          result.push(value.getAsFile());\n        }\n      });\n      return result;\n    }\n\n    /*\n        编辑区域\n    */\n\n    function getChildrenJSON($elem) {\n      var result = [];\n      var $children = $elem.childNodes() || []; // 注意 childNodes() 可以获取文本节点\n\n      $children.forEach(function (curElem) {\n        var elemResult;\n        var nodeType = curElem.nodeType; // 文本节点\n\n        if (nodeType === 3) {\n          elemResult = curElem.textContent;\n          elemResult = replaceHtmlSymbol(elemResult);\n        } // 普通 DOM 节点\n\n\n        if (nodeType === 1) {\n          elemResult = {}; // tag\n\n          elemResult.tag = curElem.nodeName.toLowerCase(); // attr\n\n          var attrData = [];\n          var attrList = curElem.attributes || {};\n          var attrListLength = attrList.length || 0;\n\n          for (var i = 0; i < attrListLength; i++) {\n            var attr = attrList[i];\n            attrData.push({\n              name: attr.name,\n              value: attr.value\n            });\n          }\n\n          elemResult.attrs = attrData; // children（递归）\n\n          elemResult.children = getChildrenJSON($(curElem));\n        }\n\n        result.push(elemResult);\n      });\n      return result;\n    } // 构造函数\n\n\n    function Text(editor) {\n      this.editor = editor;\n    } // 修改原型\n\n\n    Text.prototype = {\n      constructor: Text,\n      // 初始化\n      init: function init() {\n        // 绑定事件\n        this._bindEvent();\n      },\n      // 清空内容\n      clear: function clear() {\n        this.html('<p><br></p>');\n      },\n      // 获取 设置 html\n      html: function html(val) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        var html;\n\n        if (val == null) {\n          html = $textElem.html(); // 未选中任何内容的时候点击“加粗”或者“斜体”等按钮，就得需要一个空的占位符 &#8203 ，这里替换掉\n\n          html = html.replace(/\\u200b/gm, '');\n          return html;\n        } else {\n          $textElem.html(val); // 初始化选取，将光标定位到内容尾部\n\n          editor.initSelection();\n        }\n      },\n      // 获取 JSON\n      getJSON: function getJSON() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        return getChildrenJSON($textElem);\n      },\n      // 获取 设置 text\n      text: function text(val) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        var text;\n\n        if (val == null) {\n          text = $textElem.text(); // 未选中任何内容的时候点击“加粗”或者“斜体”等按钮，就得需要一个空的占位符 &#8203 ，这里替换掉\n\n          text = text.replace(/\\u200b/gm, '');\n          return text;\n        } else {\n          $textElem.text(\"<p>\".concat(val, \"</p>\")); // 初始化选取，将光标定位到内容尾部\n\n          editor.initSelection();\n        }\n      },\n      // 追加内容\n      append: function append(html) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        $textElem.append($(html)); // 初始化选取，将光标定位到内容尾部\n\n        editor.initSelection();\n      },\n      // 绑定事件\n      _bindEvent: function _bindEvent() {\n        // 实时保存选取\n        this._saveRangeRealTime(); // 按回车建时的特殊处理\n\n\n        this._enterKeyHandle(); // 清空时保留 <p><br></p>\n\n\n        this._clearHandle(); // 粘贴事件（粘贴文字，粘贴图片）\n\n\n        this._pasteHandle(); // tab 特殊处理\n\n\n        this._tabHandle(); // img 点击\n\n\n        this._imgHandle(); // 拖拽事件\n\n\n        this._dragHandle();\n      },\n      // 实时保存选取\n      _saveRangeRealTime: function _saveRangeRealTime() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem; // 保存当前的选区\n\n        function saveRange(e) {\n          // 随时保存选区\n          editor.selection.saveRange(); // 更新按钮 ative 状态\n\n          editor.menus.changeActive();\n        } // 按键后保存\n\n\n        $textElem.on('keyup', saveRange);\n        $textElem.on('mousedown', function (e) {\n          // mousedown 状态下，鼠标滑动到编辑区域外面，也需要保存选区\n          $textElem.on('mouseleave', saveRange);\n        });\n        $textElem.on('mouseup', function (e) {\n          saveRange(); // 在编辑器区域之内完成点击，取消鼠标滑动到编辑区外面的事件\n\n          $textElem.off('mouseleave', saveRange);\n        });\n      },\n      // 按回车键时的特殊处理\n      _enterKeyHandle: function _enterKeyHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        function insertEmptyP($selectionElem) {\n          var $p = $('<p><br></p>');\n          $p.insertBefore($selectionElem);\n          editor.selection.createRangeByElem($p, true);\n          editor.selection.restoreSelection();\n          $selectionElem.remove();\n        } // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n\n\n        function pHandle(e) {\n          var $selectionElem = editor.selection.getSelectionContainerElem();\n          var $parentElem = $selectionElem.parent();\n\n          if ($parentElem.html() === '<code><br></code>') {\n            // 回车之前光标所在一个 <p><code>.....</code></p> ，忽然回车生成一个空的 <p><code><br></code></p>\n            // 而且继续回车跳不出去，因此只能特殊处理\n            insertEmptyP($selectionElem);\n            return;\n          }\n\n          if (!$parentElem.equal($textElem)) {\n            // 不是顶级标签\n            return;\n          }\n\n          var nodeName = $selectionElem.getNodeName();\n\n          if (nodeName === 'P') {\n            // 当前的标签是 P ，不用做处理\n            return;\n          }\n\n          if ($selectionElem.text()) {\n            // 有内容，不做处理\n            return;\n          } // 插入 <p> ，并将选取定位到 <p>，删除当前标签\n\n\n          insertEmptyP($selectionElem);\n        }\n\n        $textElem.on('keyup', function (e) {\n          if (e.keyCode !== 13) {\n            // 不是回车键\n            return;\n          } // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n\n\n          pHandle(e);\n        }); // <pre><code></code></pre> 回车时 特殊处理\n\n        function codeHandle(e) {\n          var $selectionElem = editor.selection.getSelectionContainerElem();\n\n          if (!$selectionElem) {\n            return;\n          }\n\n          var $parentElem = $selectionElem.parent();\n          var selectionNodeName = $selectionElem.getNodeName();\n          var parentNodeName = $parentElem.getNodeName();\n\n          if (selectionNodeName !== 'CODE' || parentNodeName !== 'PRE') {\n            // 不符合要求 忽略\n            return;\n          }\n\n          if (!editor.cmd.queryCommandSupported('insertHTML')) {\n            // 必须原生支持 insertHTML 命令\n            return;\n          } // 处理：光标定位到代码末尾，联系点击两次回车，即跳出代码块\n\n\n          if (editor._willBreakCode === true) {\n            // 此时可以跳出代码块\n            // 插入 <p> ，并将选取定位到 <p>\n            var $p = $('<p><br></p>');\n            $p.insertAfter($parentElem);\n            editor.selection.createRangeByElem($p, true);\n            editor.selection.restoreSelection(); // 修改状态\n\n            editor._willBreakCode = false;\n            e.preventDefault();\n            return;\n          }\n\n          var _startOffset = editor.selection.getRange().startOffset; // 处理：回车时，不能插入 <br> 而是插入 \\n ，因为是在 pre 标签里面\n\n          editor.cmd.do('insertHTML', '\\n');\n          editor.selection.saveRange();\n\n          if (editor.selection.getRange().startOffset === _startOffset) {\n            // 没起作用，再来一遍\n            editor.cmd.do('insertHTML', '\\n');\n          }\n\n          var codeLength = $selectionElem.html().length;\n\n          if (editor.selection.getRange().startOffset + 1 === codeLength) {\n            // 说明光标在代码最后的位置，执行了回车操作\n            // 记录下来，以便下次回车时候跳出 code\n            editor._willBreakCode = true;\n          } // 阻止默认行为\n\n\n          e.preventDefault();\n        }\n\n        $textElem.on('keydown', function (e) {\n          if (e.keyCode !== 13) {\n            // 不是回车键\n            // 取消即将跳转代码块的记录\n            editor._willBreakCode = false;\n            return;\n          } // <pre><code></code></pre> 回车时 特殊处理\n\n\n          codeHandle(e);\n        });\n      },\n      // 清空时保留 <p><br></p>\n      _clearHandle: function _clearHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        $textElem.on('keydown', function (e) {\n          if (e.keyCode !== 8) {\n            return;\n          }\n\n          var txtHtml = $textElem.html().toLowerCase().trim();\n\n          if (txtHtml === '<p><br></p>') {\n            // 最后剩下一个空行，就不再删除了\n            e.preventDefault();\n            return;\n          }\n        });\n        $textElem.on('keyup', function (e) {\n          if (e.keyCode !== 8) {\n            return;\n          }\n\n          var $p;\n          var txtHtml = $textElem.html().toLowerCase().trim(); // firefox 时用 txtHtml === '<br>' 判断，其他用 !txtHtml 判断\n\n          if (!txtHtml || txtHtml === '<br>') {\n            // 内容空了\n            $p = $('<p><br/></p>');\n            $textElem.html(''); // 一定要先清空，否则在 firefox 下有问题\n\n            $textElem.append($p);\n            editor.selection.createRangeByElem($p, false, true);\n            editor.selection.restoreSelection();\n          }\n        });\n      },\n      // 粘贴事件（粘贴文字 粘贴图片）\n      _pasteHandle: function _pasteHandle() {\n        var editor = this.editor;\n        var config = editor.config;\n        var pasteFilterStyle = config.pasteFilterStyle;\n        var pasteTextHandle = config.pasteTextHandle;\n        var ignoreImg = config.pasteIgnoreImg;\n        var $textElem = editor.$textElem; // 粘贴图片、文本的事件，每次只能执行一个\n        // 判断该次粘贴事件是否可以执行\n\n        var pasteTime = 0;\n\n        function canDo() {\n          var now = Date.now();\n          var flag = false;\n\n          if (now - pasteTime >= 100) {\n            // 间隔大于 100 ms ，可以执行\n            flag = true;\n          }\n\n          pasteTime = now;\n          return flag;\n        }\n\n        function resetTime() {\n          pasteTime = 0;\n        } // 粘贴文字\n\n\n        $textElem.on('paste', function (e) {\n          if (UA.isIE()) {\n            return;\n          } else {\n            // 阻止默认行为，使用 execCommand 的粘贴命令\n            e.preventDefault();\n          } // 粘贴图片和文本，只能同时使用一个\n\n\n          if (!canDo()) {\n            return;\n          } // 获取粘贴的文字\n\n\n          var pasteHtml = getPasteHtml(e, pasteFilterStyle, ignoreImg);\n          var pasteText = getPasteText(e);\n          pasteText = pasteText.replace(/\\n/gm, '<br>');\n          var $selectionElem = editor.selection.getSelectionContainerElem();\n\n          if (!$selectionElem) {\n            return;\n          }\n\n          var nodeName = $selectionElem.getNodeName(); // code 中只能粘贴纯文本\n\n          if (nodeName === 'CODE' || nodeName === 'PRE') {\n            if (pasteTextHandle && isFunction(pasteTextHandle)) {\n              // 用户自定义过滤处理粘贴内容\n              pasteText = '' + (pasteTextHandle(pasteText) || '');\n            }\n\n            editor.cmd.do('insertHTML', \"<p>\".concat(pasteText, \"</p>\"));\n            return;\n          } // 先放开注释，有问题再追查 ————\n          // // 表格中忽略，可能会出现异常问题\n          // if (nodeName === 'TD' || nodeName === 'TH') {\n          //     return\n          // }\n\n\n          if (!pasteHtml) {\n            // 没有内容，可继续执行下面的图片粘贴\n            resetTime();\n            return;\n          }\n\n          try {\n            // firefox 中，获取的 pasteHtml 可能是没有 <ul> 包裹的 <li>\n            // 因此执行 insertHTML 会报错\n            if (pasteTextHandle && isFunction(pasteTextHandle)) {\n              // 用户自定义过滤处理粘贴内容\n              pasteHtml = '' + (pasteTextHandle(pasteHtml) || '');\n            }\n\n            editor.cmd.do('insertHTML', pasteHtml);\n          } catch (ex) {\n            // 此时使用 pasteText 来兼容一下\n            if (pasteTextHandle && isFunction(pasteTextHandle)) {\n              // 用户自定义过滤处理粘贴内容\n              pasteText = '' + (pasteTextHandle(pasteText) || '');\n            }\n\n            editor.cmd.do('insertHTML', \"<p>\".concat(pasteText, \"</p>\"));\n          }\n        }); // 粘贴图片\n\n        $textElem.on('paste', function (e) {\n          if (UA.isIE()) {\n            return;\n          } else {\n            e.preventDefault();\n          } // 粘贴图片和文本，只能同时使用一个\n\n\n          if (!canDo()) {\n            return;\n          } // 获取粘贴的图片\n\n\n          var pasteFiles = getPasteImgs(e);\n\n          if (!pasteFiles || !pasteFiles.length) {\n            return;\n          } // 获取当前的元素\n\n\n          var $selectionElem = editor.selection.getSelectionContainerElem();\n\n          if (!$selectionElem) {\n            return;\n          }\n\n          var nodeName = $selectionElem.getNodeName(); // code 中粘贴忽略\n\n          if (nodeName === 'CODE' || nodeName === 'PRE') {\n            return;\n          } // 上传图片\n\n\n          var uploadImg = editor.uploadImg;\n          uploadImg.uploadImg(pasteFiles);\n        });\n      },\n      // tab 特殊处理\n      _tabHandle: function _tabHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        $textElem.on('keydown', function (e) {\n          if (e.keyCode !== 9) {\n            return;\n          }\n\n          if (!editor.cmd.queryCommandSupported('insertHTML')) {\n            // 必须原生支持 insertHTML 命令\n            return;\n          }\n\n          var $selectionElem = editor.selection.getSelectionContainerElem();\n\n          if (!$selectionElem) {\n            return;\n          }\n\n          var $parentElem = $selectionElem.parent();\n          var selectionNodeName = $selectionElem.getNodeName();\n          var parentNodeName = $parentElem.getNodeName();\n\n          if (selectionNodeName === 'CODE' && parentNodeName === 'PRE') {\n            // <pre><code> 里面\n            editor.cmd.do('insertHTML', '    ');\n          } else {\n            // 普通文字\n            editor.cmd.do('insertHTML', '&nbsp;&nbsp;&nbsp;&nbsp;');\n          }\n\n          e.preventDefault();\n        });\n      },\n      // img 点击\n      _imgHandle: function _imgHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem; // 为图片增加 selected 样式\n\n        $textElem.on('click', 'img', function (e) {\n          var img = this;\n          var $img = $(img);\n\n          if ($img.attr('data-w-e') === '1') {\n            // 是表情图片，忽略\n            return;\n          } // 记录当前点击过的图片\n\n\n          editor._selectedImg = $img; // 修改选区并 restore ，防止用户此时点击退格键，会删除其他内容\n\n          editor.selection.createRangeByElem($img);\n          editor.selection.restoreSelection();\n        }); // 去掉图片的 selected 样式\n\n        $textElem.on('click  keyup', function (e) {\n          if (e.target.matches('img')) {\n            // 点击的是图片，忽略\n            return;\n          } // 删除记录\n\n\n          editor._selectedImg = null;\n        });\n      },\n      // 拖拽事件\n      _dragHandle: function _dragHandle() {\n        var editor = this.editor; // 禁用 document 拖拽事件\n\n        var $document = $(document);\n        $document.on('dragleave drop dragenter dragover', function (e) {\n          e.preventDefault();\n        }); // 添加编辑区域拖拽事件\n\n        var $textElem = editor.$textElem;\n        $textElem.on('drop', function (e) {\n          e.preventDefault();\n          var files = e.dataTransfer && e.dataTransfer.files;\n\n          if (!files || !files.length) {\n            return;\n          } // 上传图片\n\n\n          var uploadImg = editor.uploadImg;\n          uploadImg.uploadImg(files);\n        });\n      }\n    };\n\n    /*\n        命令，封装 document.execCommand\n    */\n\n    function Command(editor) {\n      this.editor = editor;\n    } // 修改原型\n\n\n    Command.prototype = {\n      constructor: Command,\n      // 执行命令\n      do: function _do(name, value) {\n        var editor = this.editor; // 使用 styleWithCSS\n\n        if (!editor._useStyleWithCSS) {\n          document.execCommand('styleWithCSS', null, true);\n          editor._useStyleWithCSS = true;\n        } // 如果无选区，忽略\n\n\n        if (!editor.selection.getRange()) {\n          return;\n        } // 恢复选取\n\n\n        editor.selection.restoreSelection(); // 执行\n\n        var _name = '_' + name;\n\n        if (this[_name]) {\n          // 有自定义事件\n          this[_name](value);\n        } else {\n          // 默认 command\n          this._execCommand(name, value);\n        } // 修改菜单状态\n\n\n        editor.menus.changeActive(); // 最后，恢复选取保证光标在原来的位置闪烁\n\n        editor.selection.saveRange();\n        editor.selection.restoreSelection(); // 触发 onchange\n\n        editor.change && editor.change();\n      },\n      // 自定义 insertHTML 事件\n      _insertHTML: function _insertHTML(html) {\n        var editor = this.editor;\n        var range = editor.selection.getRange();\n\n        if (this.queryCommandSupported('insertHTML')) {\n          // W3C\n          this._execCommand('insertHTML', html);\n        } else if (range.insertNode) {\n          // IE\n          range.deleteContents();\n          range.insertNode($(html)[0]);\n        } else if (range.pasteHTML) {\n          // IE <= 10\n          range.pasteHTML(html);\n        }\n      },\n      // 插入 elem\n      _insertElem: function _insertElem($elem) {\n        var editor = this.editor;\n        var range = editor.selection.getRange();\n\n        if (range.insertNode) {\n          range.deleteContents();\n          range.insertNode($elem[0]);\n        }\n      },\n      // 封装 execCommand\n      _execCommand: function _execCommand(name, value) {\n        document.execCommand(name, false, value);\n      },\n      // 封装 document.queryCommandValue\n      queryCommandValue: function queryCommandValue(name) {\n        return document.queryCommandValue(name);\n      },\n      // 封装 document.queryCommandState\n      queryCommandState: function queryCommandState(name) {\n        return document.queryCommandState(name);\n      },\n      // 封装 document.queryCommandSupported\n      queryCommandSupported: function queryCommandSupported(name) {\n        return document.queryCommandSupported(name);\n      }\n    };\n\n    /*\n        selection range API\n    */\n\n    function API(editor) {\n      this.editor = editor;\n      this._currentRange = null;\n    } // 修改原型\n\n\n    API.prototype = {\n      constructor: API,\n      // 获取 range 对象\n      getRange: function getRange() {\n        return this._currentRange;\n      },\n      // 保存选区\n      saveRange: function saveRange(_range) {\n        if (_range) {\n          // 保存已有选区\n          this._currentRange = _range;\n          return;\n        } // 获取当前的选区\n\n\n        var selection = window.getSelection();\n\n        if (selection.rangeCount === 0) {\n          return;\n        }\n\n        var range = selection.getRangeAt(0); // 判断选区内容是否在编辑内容之内\n\n        var $containerElem = this.getSelectionContainerElem(range);\n\n        if (!$containerElem) {\n          return;\n        } // 判断选区内容是否在不可编辑区域之内\n\n\n        if ($containerElem.attr('contenteditable') === 'false' || $containerElem.parentUntil('[contenteditable=false]')) {\n          return;\n        }\n\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        if ($textElem.isContain($containerElem)) {\n          // 是编辑内容之内的\n          this._currentRange = range;\n        }\n      },\n      // 折叠选区\n      collapseRange: function collapseRange(toStart) {\n        if (toStart == null) {\n          // 默认为 false\n          toStart = false;\n        }\n\n        var range = this._currentRange;\n\n        if (range) {\n          range.collapse(toStart);\n        }\n      },\n      // 选中区域的文字\n      getSelectionText: function getSelectionText() {\n        var range = this._currentRange;\n\n        if (range) {\n          return this._currentRange.toString();\n        } else {\n          return '';\n        }\n      },\n      // 选区的 $Elem\n      getSelectionContainerElem: function getSelectionContainerElem(range) {\n        range = range || this._currentRange;\n        var elem;\n\n        if (range) {\n          elem = range.commonAncestorContainer;\n          return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n      },\n      getSelectionStartElem: function getSelectionStartElem(range) {\n        range = range || this._currentRange;\n        var elem;\n\n        if (range) {\n          elem = range.startContainer;\n          return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n      },\n      getSelectionEndElem: function getSelectionEndElem(range) {\n        range = range || this._currentRange;\n        var elem;\n\n        if (range) {\n          elem = range.endContainer;\n          return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n      },\n      // 选区是否为空\n      isSelectionEmpty: function isSelectionEmpty() {\n        var range = this._currentRange;\n\n        if (range && range.startContainer) {\n          if (range.startContainer === range.endContainer) {\n            if (range.startOffset === range.endOffset) {\n              return true;\n            }\n          }\n        }\n\n        return false;\n      },\n      // 恢复选区\n      restoreSelection: function restoreSelection() {\n        var selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(this._currentRange);\n      },\n      // 创建一个空白（即 &#8203 字符）选区\n      createEmptyRange: function createEmptyRange() {\n        var editor = this.editor;\n        var range = this.getRange();\n        var $elem;\n\n        if (!range) {\n          // 当前无 range\n          return;\n        }\n\n        if (!this.isSelectionEmpty()) {\n          // 当前选区必须没有内容才可以\n          return;\n        }\n\n        try {\n          // 目前只支持 webkit 内核\n          if (UA.isWebkit()) {\n            // 插入 &#8203\n            editor.cmd.do('insertHTML', '&#8203;'); // 修改 offset 位置\n\n            range.setEnd(range.endContainer, range.endOffset + 1); // 存储\n\n            this.saveRange(range);\n          } else {\n            $elem = $('<strong>&#8203;</strong>');\n            editor.cmd.do('insertElem', $elem);\n            this.createRangeByElem($elem, true);\n          }\n        } catch (ex) {// 部分情况下会报错，兼容一下\n        }\n      },\n      // 根据 $Elem 设置选区\n      createRangeByElem: function createRangeByElem($elem, toStart, isContent) {\n        // $elem - 经过封装的 elem\n        // toStart - true 开始位置，false 结束位置\n        // isContent - 是否选中Elem的内容\n        if (!$elem.length) {\n          return;\n        }\n\n        var elem = $elem[0];\n        var range = document.createRange();\n\n        if (isContent) {\n          range.selectNodeContents(elem);\n        } else {\n          range.selectNode(elem);\n        }\n\n        if (typeof toStart === 'boolean') {\n          range.collapse(toStart);\n        } // 存储 range\n\n\n        this.saveRange(range);\n      }\n    };\n\n    /*\n        上传进度条\n    */\n\n    function Progress(editor) {\n      this.editor = editor;\n      this._time = 0;\n      this._isShow = false;\n      this._isRender = false;\n      this._timeoutId = 0;\n      this.$textContainer = editor.$textContainerElem;\n      this.$bar = $('<div class=\"w-e-progress\"></div>');\n    }\n\n    Progress.prototype = {\n      constructor: Progress,\n      show: function show(progress) {\n        var _this = this;\n\n        // 状态处理\n        if (this._isShow) {\n          return;\n        }\n\n        this._isShow = true; // 渲染\n\n        var $bar = this.$bar;\n\n        if (!this._isRender) {\n          var $textContainer = this.$textContainer;\n          $textContainer.append($bar);\n        } else {\n          this._isRender = true;\n        } // 改变进度（节流，100ms 渲染一次）\n\n\n        if (Date.now() - this._time > 100) {\n          if (progress <= 1) {\n            $bar.css('width', progress * 100 + '%');\n            this._time = Date.now();\n          }\n        } // 隐藏\n\n\n        var timeoutId = this._timeoutId;\n\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n\n        timeoutId = setTimeout(function () {\n          _this._hide();\n        }, 500);\n      },\n      _hide: function _hide() {\n        var $bar = this.$bar;\n        $bar.remove(); // 修改状态\n\n        this._time = 0;\n        this._isShow = false;\n        this._isRender = false;\n      }\n    };\n\n    function UploadImg(editor) {\n      this.editor = editor;\n    } // 原型\n\n\n    UploadImg.prototype = {\n      constructor: UploadImg,\n      // 根据 debug 弹出不同的信息\n      _alert: function _alert(alertInfo, debugInfo) {\n        var editor = this.editor;\n        var debug = editor.config.debug;\n        var customAlert = editor.config.customAlert;\n\n        if (debug) {\n          throw new Error('wangEditor: ' + (debugInfo || alertInfo));\n        } else {\n          if (customAlert && typeof customAlert === 'function') {\n            customAlert(alertInfo);\n          } else {\n            alert(alertInfo);\n          }\n        }\n      },\n      // 根据链接插入图片\n      insertLinkImg: function insertLinkImg(link) {\n        var _this2 = this;\n\n        if (!link) {\n          return;\n        }\n\n        var editor = this.editor;\n        var config = editor.config; // 校验格式\n\n        var linkImgCheck = config.linkImgCheck;\n        var checkResult;\n\n        if (linkImgCheck && typeof linkImgCheck === 'function') {\n          checkResult = linkImgCheck(link);\n\n          if (typeof checkResult === 'string') {\n            // 校验失败，提示信息\n            alert(checkResult);\n            return;\n          }\n        }\n\n        editor.cmd.do('insertHTML', \"<img src=\\\"\".concat(link, \"\\\" style=\\\"max-width:100%;\\\"/>\")); // 验证图片 url 是否有效，无效的话给出提示\n\n        var img = document.createElement('img');\n\n        img.onload = function () {\n          var callback = config.linkImgCallback;\n\n          if (callback && typeof callback === 'function') {\n            callback(link);\n          }\n\n          img = null;\n        };\n\n        img.onerror = function () {\n          img = null; // 无法成功下载图片\n\n          _this2._alert('插入图片错误', \"wangEditor: \\u63D2\\u5165\\u56FE\\u7247\\u51FA\\u9519\\uFF0C\\u56FE\\u7247\\u94FE\\u63A5\\u662F \\\"\".concat(link, \"\\\"\\uFF0C\\u4E0B\\u8F7D\\u8BE5\\u94FE\\u63A5\\u5931\\u8D25\"));\n\n          return;\n        };\n\n        img.onabort = function () {\n          img = null;\n        };\n\n        img.src = link;\n      },\n      // 上传图片\n      uploadImg: function uploadImg(files) {\n        var _this3 = this;\n\n        if (!files || !files.length) {\n          return;\n        } // ------------------------------ 获取配置信息 ------------------------------\n\n\n        var editor = this.editor;\n        var config = editor.config;\n        var uploadImgServer = config.uploadImgServer;\n        var uploadImgShowBase64 = config.uploadImgShowBase64;\n        var maxSize = config.uploadImgMaxSize;\n        var maxSizeM = maxSize / 1024 / 1024;\n        var maxLength = config.uploadImgMaxLength || 10000;\n        var uploadFileName = config.uploadFileName || '';\n        var uploadImgParams = config.uploadImgParams || {};\n        var uploadImgParamsWithUrl = config.uploadImgParamsWithUrl;\n        var uploadImgHeaders = config.uploadImgHeaders || {};\n        var hooks = config.uploadImgHooks || {};\n        var timeout = config.uploadImgTimeout || 3000;\n        var withCredentials = config.withCredentials;\n\n        if (withCredentials == null) {\n          withCredentials = false;\n        }\n\n        var customUploadImg = config.customUploadImg;\n\n        if (!customUploadImg) {\n          // 没有 customUploadImg 的情况下，需要如下两个配置才能继续进行图片上传\n          if (!uploadImgServer && !uploadImgShowBase64) {\n            return;\n          }\n        } // ------------------------------ 验证文件信息 ------------------------------\n\n\n        var resultFiles = [];\n        var errInfo = [];\n        arrForEach(files, function (file) {\n          var name = file.name;\n          var size = file.size; // chrome 低版本 name === undefined\n\n          if (!name || !size) {\n            return;\n          }\n\n          if (/\\.(jpg|jpeg|png|bmp|gif|webp)$/i.test(name) === false) {\n            // 后缀名不合法，不是图片\n            errInfo.push(\"\\u3010\".concat(name, \"\\u3011\\u4E0D\\u662F\\u56FE\\u7247\"));\n            return;\n          }\n\n          if (maxSize < size) {\n            // 上传图片过大\n            errInfo.push(\"\\u3010\".concat(name, \"\\u3011\\u5927\\u4E8E \").concat(maxSizeM, \"M\"));\n            return;\n          } // 验证通过的加入结果列表\n\n\n          resultFiles.push(file);\n        }); // 抛出验证信息\n\n        if (errInfo.length) {\n          this._alert('图片验证未通过: \\n' + errInfo.join('\\n'));\n\n          return;\n        }\n\n        if (resultFiles.length > maxLength) {\n          this._alert('一次最多上传' + maxLength + '张图片');\n\n          return;\n        } // ------------------------------ 自定义上传 ------------------------------\n\n\n        if (customUploadImg && typeof customUploadImg === 'function') {\n          customUploadImg(resultFiles, this.insertLinkImg.bind(this)); // 阻止以下代码执行\n\n          return;\n        } // 添加图片数据\n\n\n        var formdata = new FormData();\n        arrForEach(resultFiles, function (file) {\n          var name = uploadFileName || file.name;\n          formdata.append(name, file);\n        }); // ------------------------------ 上传图片 ------------------------------\n\n        if (uploadImgServer && typeof uploadImgServer === 'string') {\n          // 添加参数\n          var uploadImgServerArr = uploadImgServer.split('#');\n          uploadImgServer = uploadImgServerArr[0];\n          var uploadImgServerHash = uploadImgServerArr[1] || '';\n          objForEach(uploadImgParams, function (key, val) {\n            // 因使用者反应，自定义参数不能默认 encode ，由 v3.1.1 版本开始注释掉\n            // val = encodeURIComponent(val)\n            // 第一，将参数拼接到 url 中\n            if (uploadImgParamsWithUrl) {\n              if (uploadImgServer.indexOf('?') > 0) {\n                uploadImgServer += '&';\n              } else {\n                uploadImgServer += '?';\n              }\n\n              uploadImgServer = uploadImgServer + key + '=' + val;\n            } // 第二，将参数添加到 formdata 中\n\n\n            formdata.append(key, val);\n          });\n\n          if (uploadImgServerHash) {\n            uploadImgServer += '#' + uploadImgServerHash;\n          } // 定义 xhr\n\n\n          var xhr = new XMLHttpRequest();\n          xhr.open('POST', uploadImgServer); // 设置超时\n\n          xhr.timeout = timeout;\n\n          xhr.ontimeout = function () {\n            // hook - timeout\n            if (hooks.timeout && typeof hooks.timeout === 'function') {\n              hooks.timeout(xhr, editor);\n            }\n\n            _this3._alert('上传图片超时');\n          }; // 监控 progress\n\n\n          if (xhr.upload) {\n            xhr.upload.onprogress = function (e) {\n              var percent; // 进度条\n\n              var progressBar = new Progress(editor);\n\n              if (e.lengthComputable) {\n                percent = e.loaded / e.total;\n                progressBar.show(percent);\n              }\n            };\n          } // 返回数据\n\n\n          xhr.onreadystatechange = function () {\n            var result;\n\n            if (xhr.readyState === 4) {\n              if (xhr.status < 200 || xhr.status >= 300) {\n                // hook - error\n                if (hooks.error && typeof hooks.error === 'function') {\n                  hooks.error(xhr, editor);\n                } // xhr 返回状态错误\n\n\n                _this3._alert('上传图片发生错误', \"\\u4E0A\\u4F20\\u56FE\\u7247\\u53D1\\u751F\\u9519\\u8BEF\\uFF0C\\u670D\\u52A1\\u5668\\u8FD4\\u56DE\\u72B6\\u6001\\u662F \".concat(xhr.status));\n\n                return;\n              }\n\n              result = xhr.responseText;\n\n              if (_typeof(result) !== 'object') {\n                try {\n                  result = JSON.parse(result);\n                } catch (ex) {\n                  // hook - fail\n                  if (hooks.fail && typeof hooks.fail === 'function') {\n                    hooks.fail(xhr, editor, result);\n                  }\n\n                  _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果是: ' + result);\n\n                  return;\n                }\n              }\n\n              if (!hooks.customInsert && result.errno != '0') {\n                // hook - fail\n                if (hooks.fail && typeof hooks.fail === 'function') {\n                  hooks.fail(xhr, editor, result);\n                } // 数据错误\n\n\n                _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果 errno=' + result.errno);\n              } else {\n                if (hooks.customInsert && typeof hooks.customInsert === 'function') {\n                  // 使用者自定义插入方法\n                  hooks.customInsert(_this3.insertLinkImg.bind(_this3), result, editor);\n                } else {\n                  // 将图片插入编辑器\n                  var data = result.data || [];\n                  data.forEach(function (link) {\n                    _this3.insertLinkImg(link);\n                  });\n                } // hook - success\n\n\n                if (hooks.success && typeof hooks.success === 'function') {\n                  hooks.success(xhr, editor, result);\n                }\n              }\n            }\n          }; // hook - before\n\n\n          if (hooks.before && typeof hooks.before === 'function') {\n            var beforeResult = hooks.before(xhr, editor, resultFiles);\n\n            if (beforeResult && _typeof(beforeResult) === 'object') {\n              if (beforeResult.prevent) {\n                // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\n                this._alert(beforeResult.msg);\n\n                return;\n              }\n            }\n          } // 自定义 headers\n\n\n          objForEach(uploadImgHeaders, function (key, val) {\n            xhr.setRequestHeader(key, val);\n          }); // 跨域传 cookie\n\n          xhr.withCredentials = withCredentials; // 发送请求\n\n          xhr.send(formdata); // 注意，要 return 。不去操作接下来的 base64 显示方式\n\n          return;\n        } // ------------------------------ 显示 base64 格式 ------------------------------\n\n\n        if (uploadImgShowBase64) {\n          arrForEach(files, function (file) {\n            var _this = _this3;\n            var reader = new FileReader();\n            reader.readAsDataURL(file);\n\n            reader.onload = function () {\n              _this.insertLinkImg(this.result);\n            };\n          });\n        }\n      }\n    };\n\n    var editorId = 1; // 构造函数\n\n    function Editor(toolbarSelector, textSelector) {\n      if (toolbarSelector == null) {\n        // 没有传入任何参数，报错\n        throw new Error('错误：初始化编辑器时候未传入任何参数，请查阅文档');\n      } // id，用以区分单个页面不同的编辑器对象\n\n\n      this.id = 'wangEditor-' + editorId++;\n      this.toolbarSelector = toolbarSelector;\n      this.textSelector = textSelector; // 自定义配置\n\n      this.customConfig = {};\n    } // 修改原型\n\n\n    Editor.prototype = {\n      constructor: Editor,\n      // 初始化配置\n      _initConfig: function _initConfig() {\n        // _config 是默认配置，this.customConfig 是用户自定义配置，将它们 merge 之后再赋值\n        var target = {};\n        this.config = Object.assign(target, config, this.customConfig); // 将语言配置，生成正则表达式\n\n        var langConfig = this.config.lang || {};\n        var langArgs = [];\n        objForEach(langConfig, function (key, val) {\n          // key 即需要生成正则表达式的规则，如“插入链接”\n          // val 即需要被替换成的语言，如“insert link”\n          langArgs.push({\n            reg: new RegExp(key, 'img'),\n            val: val\n          });\n        });\n        this.config.langArgs = langArgs;\n      },\n      // 初始化 DOM\n      _initDom: function _initDom(params) {\n        var _this = this;\n\n        var containerHeight = params.containerHeight;\n        var toolbarSelector = this.toolbarSelector;\n        var $toolbarSelector = $(toolbarSelector);\n        var textSelector = this.textSelector;\n        var config$$1 = this.config;\n        var zIndex = config$$1.zIndex; // 定义变量\n\n        var $toolbarElem, $textContainerElem, $textElem, $children;\n\n        if (textSelector == null) {\n          // 只传入一个参数，即是容器的选择器或元素，toolbar 和 text 的元素自行创建\n          $toolbarElem = $('<div></div>');\n          $textContainerElem = $('<div></div>'); // 将编辑器区域原有的内容，暂存起来\n\n          $children = $toolbarSelector.children(); // 添加到 DOM 结构中\n\n          $toolbarSelector.append($toolbarElem).append($textContainerElem); // 自行创建的，需要配置默认的样式\n\n          $toolbarElem.css('background-color', '#f1f1f1').css('border', '1px solid #ccc');\n          $textContainerElem.css('border', '1px solid #ccc').css('border-top', 'none').css('height', \"\".concat(containerHeight, \"px\"));\n        } else {\n          // toolbar 和 text 的选择器都有值，记录属性\n          $toolbarElem = $toolbarSelector;\n          $textContainerElem = $(textSelector); // 将编辑器区域原有的内容，暂存起来\n\n          $children = $textContainerElem.children();\n        } // 编辑区域\n\n\n        $textElem = $('<div></div>');\n        $textElem.attr('contenteditable', 'true').css('width', '100%').css('height', '100%'); // 初始化编辑区域内容\n\n        if ($children && $children.length) {\n          $textElem.append($children);\n        } else {\n          $textElem.append($('<p><br></p>'));\n        } // 编辑区域加入DOM\n\n\n        $textContainerElem.append($textElem); // 设置通用的 class\n\n        $toolbarElem.addClass('w-e-toolbar');\n        $textContainerElem.addClass('w-e-text-container');\n        $textContainerElem.css('z-index', zIndex);\n        $textElem.addClass('w-e-text'); // 添加 ID\n\n        var toolbarElemId = getRandom('toolbar-elem');\n        $toolbarElem.attr('id', toolbarElemId);\n        var textElemId = getRandom('text-elem');\n        $textElem.attr('id', textElemId); // 记录属性\n\n        this.$toolbarElem = $toolbarElem;\n        this.$textContainerElem = $textContainerElem;\n        this.$textElem = $textElem;\n        this.toolbarElemId = toolbarElemId;\n        this.textElemId = textElemId; // 记录输入法的开始和结束\n\n        var compositionEnd = true;\n        $textContainerElem.on('compositionstart', function () {\n          // 输入法开始输入\n          compositionEnd = false;\n        });\n        $textContainerElem.on('compositionend', function () {\n          // 输入法结束输入\n          compositionEnd = true;\n        }); // 绑定 onchange\n\n        $textContainerElem.on('click keyup', function () {\n          // 输入法结束才出发 onchange\n          compositionEnd && _this.change && _this.change();\n        });\n        $toolbarElem.on('click', function () {\n          this.change && this.change();\n        }); //绑定 onfocus 与 onblur 事件\n\n        if (config$$1.onfocus || config$$1.onblur) {\n          // 当前编辑器是否是焦点状态\n          this.isFocus = false;\n          $(document).on('click', function (e) {\n            //判断当前点击元素是否在编辑器内\n            var isChild = $textElem.isContain($(e.target)); //判断当前点击元素是否为工具栏\n\n            var isToolbar = $toolbarElem.isContain($(e.target));\n            var isMenu = $toolbarElem[0] == e.target ? true : false;\n\n            if (!isChild) {\n              //若为选择工具栏中的功能，则不视为成blur操作\n              if (isToolbar && !isMenu) {\n                return;\n              }\n\n              if (_this.isFocus) {\n                _this.onblur && _this.onblur();\n              }\n\n              _this.isFocus = false;\n            } else {\n              if (!_this.isFocus) {\n                _this.onfocus && _this.onfocus();\n              }\n\n              _this.isFocus = true;\n            }\n          });\n        }\n      },\n      // 封装 command\n      _initCommand: function _initCommand() {\n        this.cmd = new Command(this);\n      },\n      // 封装 selection range API\n      _initSelectionAPI: function _initSelectionAPI() {\n        this.selection = new API(this);\n      },\n      // 添加图片上传\n      _initUploadImg: function _initUploadImg() {\n        this.uploadImg = new UploadImg(this);\n      },\n      // 初始化菜单\n      _initMenus: function _initMenus() {\n        this.menus = new Menus(this);\n        this.menus.init();\n      },\n      // 添加 text 区域\n      _initText: function _initText() {\n        this.txt = new Text(this);\n        this.txt.init();\n      },\n      // 初始化选区，将光标定位到内容尾部\n      initSelection: function initSelection(newLine) {\n        var $textElem = this.$textElem;\n        var $children = $textElem.children();\n\n        if (!$children.length) {\n          // 如果编辑器区域无内容，添加一个空行，重新设置选区\n          $textElem.append($('<p><br></p>'));\n          this.initSelection();\n          return;\n        }\n\n        var $last = $children.last();\n\n        if (newLine) {\n          // 新增一个空行\n          var html = $last.html().toLowerCase();\n          var nodeName = $last.getNodeName();\n\n          if (html !== '<br>' && html !== '<br\\/>' || nodeName !== 'P') {\n            // 最后一个元素不是 <p><br></p>，添加一个空行，重新设置选区\n            $textElem.append($('<p><br></p>'));\n            this.initSelection();\n            return;\n          }\n        }\n\n        this.selection.createRangeByElem($last, false, true);\n        this.selection.restoreSelection();\n      },\n      // 绑定事件\n      _bindEvent: function _bindEvent() {\n        // -------- 绑定 onchange 事件 --------\n        var onChangeTimeoutId = 0;\n        var beforeChangeHtml = this.txt.html();\n        var config$$1 = this.config; // onchange 触发延迟时间\n\n        var onchangeTimeout = config$$1.onchangeTimeout;\n        onchangeTimeout = parseInt(onchangeTimeout, 10);\n\n        if (!onchangeTimeout || onchangeTimeout <= 0) {\n          onchangeTimeout = 200;\n        }\n\n        var onchange = config$$1.onchange;\n\n        if (onchange && typeof onchange === 'function') {\n          // 触发 change 的有三个场景：\n          // 1. $textContainerElem.on('click keyup')\n          // 2. $toolbarElem.on('click')\n          // 3. editor.cmd.do()\n          this.change = function () {\n            // 判断是否有变化\n            var currentHtml = this.txt.html();\n\n            if (currentHtml.length === beforeChangeHtml.length) {\n              // 需要比较每一个字符\n              if (currentHtml === beforeChangeHtml) {\n                return;\n              }\n            } // 执行，使用节流\n\n\n            if (onChangeTimeoutId) {\n              clearTimeout(onChangeTimeoutId);\n            }\n\n            onChangeTimeoutId = setTimeout(function () {\n              // 触发配置的 onchange 函数\n              onchange(currentHtml);\n              beforeChangeHtml = currentHtml;\n            }, onchangeTimeout);\n          };\n        } // -------- 绑定 onblur 事件 --------\n\n\n        var onblur = config$$1.onblur;\n\n        if (onblur && typeof onblur === 'function') {\n          this.onblur = function () {\n            var currentHtml = this.txt.html();\n            onblur(currentHtml);\n          };\n        } // -------- 绑定 onfocus 事件 --------\n\n\n        var onfocus = config$$1.onfocus;\n\n        if (onfocus && typeof onfocus === 'function') {\n          this.onfocus = function () {\n            onfocus();\n          };\n        }\n      },\n      // 创建编辑器\n      create: function create(params) {\n        var defalutParams = {\n          containerHeight: 300 // 初始化配置信息\n\n        };\n\n        this._initConfig(); // 初始化 DOM 参数\n\n\n        this._initDom(_objectSpread({}, defalutParams, params)); // 封装 command API\n\n\n        this._initCommand(); // 封装 selection range API\n\n\n        this._initSelectionAPI(); // 添加 text\n\n\n        this._initText(); // 初始化菜单\n\n\n        this._initMenus(); // 添加 图片上传\n\n\n        this._initUploadImg(); // 初始化选区，将光标定位到内容尾部\n\n\n        this.initSelection(true); // 绑定事件\n\n        this._bindEvent();\n      },\n      // 解绑所有事件（暂时不对外开放）\n      _offAllEvent: function _offAllEvent() {\n        $.offAll();\n      }\n    };\n\n    try {\n    } catch (ex) {\n      throw new Error('请在浏览器环境下运行');\n    } // polyfill\n\n\n    polyfill(); // 这里的 `inlinecss` 将被替换成 css 代码的内容，详情可去 ./gulpfile.js 中搜索 `inlinecss` 关键字\n\n    var inlinecss = '.w-e-toolbar,.w-e-text-container,.w-e-menu-panel {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-toolbar *,.w-e-text-container *,.w-e-menu-panel * {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-clear-fix:after {  content: \"\";  display: table;  clear: both;}.w-e-toolbar .w-e-droplist {  position: absolute;  left: 0;  top: 0;  background-color: #fff;  border: 1px solid #f1f1f1;  border-right-color: #ccc;  border-bottom-color: #ccc;}.w-e-toolbar .w-e-droplist .w-e-dp-title {  text-align: center;  color: #999;  line-height: 2;  border-bottom: 1px solid #f1f1f1;  font-size: 13px;}.w-e-toolbar .w-e-droplist ul.w-e-list {  list-style: none;  line-height: 1;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item {  color: #333;  padding: 5px 0;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item:hover {  background-color: #f1f1f1;}.w-e-toolbar .w-e-droplist ul.w-e-block {  list-style: none;  text-align: left;  padding: 5px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item {  display: inline-block;  *display: inline;  *zoom: 1;  padding: 3px 5px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item:hover {  background-color: #f1f1f1;}@font-face {  font-family: \\'w-e-icon\\';  src: url(data:application/x-font-woff;charset=utf-8;base64,) format(\\'truetype\\');  font-weight: normal;  font-style: normal;}[class^=\"w-e-icon-\"],[class*=\" w-e-icon-\"] {  /* use !important to prevent issues with browser extensions that change fonts */  font-family: \\'w-e-icon\\' !important;  speak: none;  font-style: normal;  font-weight: normal;  font-variant: normal;  text-transform: none;  line-height: 1;  /* Better Font Rendering =========== */  -webkit-font-smoothing: antialiased;  -moz-osx-font-smoothing: grayscale;}.w-e-icon-close:before {  content: \"\\\\f00d\";}.w-e-icon-upload2:before {  content: \"\\\\e9c6\";}.w-e-icon-trash-o:before {  content: \"\\\\f014\";}.w-e-icon-header:before {  content: \"\\\\f1dc\";}.w-e-icon-pencil2:before {  content: \"\\\\e906\";}.w-e-icon-paint-brush:before {  content: \"\\\\f1fc\";}.w-e-icon-image:before {  content: \"\\\\e90d\";}.w-e-icon-play:before {  content: \"\\\\e912\";}.w-e-icon-location:before {  content: \"\\\\e947\";}.w-e-icon-undo:before {  content: \"\\\\e965\";}.w-e-icon-redo:before {  content: \"\\\\e966\";}.w-e-icon-quotes-left:before {  content: \"\\\\e977\";}.w-e-icon-list-numbered:before {  content: \"\\\\e9b9\";}.w-e-icon-list2:before {  content: \"\\\\e9bb\";}.w-e-icon-link:before {  content: \"\\\\e9cb\";}.w-e-icon-happy:before {  content: \"\\\\e9df\";}.w-e-icon-bold:before {  content: \"\\\\ea62\";}.w-e-icon-underline:before {  content: \"\\\\ea63\";}.w-e-icon-italic:before {  content: \"\\\\ea64\";}.w-e-icon-strikethrough:before {  content: \"\\\\ea65\";}.w-e-icon-table2:before {  content: \"\\\\ea71\";}.w-e-icon-paragraph-left:before {  content: \"\\\\ea77\";}.w-e-icon-paragraph-center:before {  content: \"\\\\ea78\";}.w-e-icon-paragraph-right:before {  content: \"\\\\ea79\";}.w-e-icon-terminal:before {  content: \"\\\\f120\";}.w-e-icon-page-break:before {  content: \"\\\\ea68\";}.w-e-icon-cancel-circle:before {  content: \"\\\\ea0d\";}.w-e-icon-font:before {  content: \"\\\\ea5c\";}.w-e-icon-text-heigh:before {  content: \"\\\\ea5f\";}.w-e-toolbar {  display: -ms-flexbox;  display: flex;  padding: 0 5px;  /* flex-wrap: wrap; */  /* 单个菜单 */}.w-e-toolbar .w-e-menu {  position: relative;  text-align: center;  padding: 5px 10px;  cursor: pointer;}.w-e-toolbar .w-e-menu i {  color: #999;}.w-e-toolbar .w-e-menu:hover i {  color: #333;}.w-e-toolbar .w-e-active i {  color: #1e88e5;}.w-e-toolbar .w-e-active:hover i {  color: #1e88e5;}.w-e-text-container .w-e-panel-container {  position: absolute;  top: 0;  left: 50%;  border: 1px solid #ccc;  border-top: 0;  box-shadow: 1px 1px 2px #ccc;  color: #333;  background-color: #fff;  /* 为 emotion panel 定制的样式 */  /* 上传图片的 panel 定制样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-close {  position: absolute;  right: 0;  top: 0;  padding: 5px;  margin: 2px 5px 0 0;  cursor: pointer;  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-close:hover {  color: #333;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title {  list-style: none;  display: -ms-flexbox;  display: flex;  font-size: 14px;  margin: 2px 10px 0 10px;  border-bottom: 1px solid #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-item {  padding: 3px 5px;  color: #999;  cursor: pointer;  margin: 0 3px;  position: relative;  top: 1px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-active {  color: #333;  border-bottom: 1px solid #333;  cursor: default;  font-weight: 700;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content {  padding: 10px 15px 10px 15px;  font-size: 16px;  /* 输入框的样式 */  /* 按钮的样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content button:focus {  outline: none;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea {  width: 100%;  border: 1px solid #ccc;  padding: 5px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus {  border-color: #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text] {  border: none;  border-bottom: 1px solid #ccc;  font-size: 14px;  height: 20px;  color: #333;  text-align: left;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].small {  width: 30px;  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].block {  display: block;  width: 100%;  margin: 10px 0;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text]:focus {  border-bottom: 2px solid #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button {  font-size: 14px;  color: #1e88e5;  border: none;  padding: 5px 10px;  background-color: #fff;  cursor: pointer;  border-radius: 3px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.left {  float: left;  margin-right: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.right {  float: right;  margin-left: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.gray {  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.red {  color: #c24f4a;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button:hover {  background-color: #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container:after {  content: \"\";  display: table;  clear: both;}.w-e-text-container .w-e-panel-container .w-e-emoticon-container .w-e-item {  cursor: pointer;  font-size: 18px;  padding: 0 3px;  display: inline-block;  *display: inline;  *zoom: 1;}.w-e-text-container .w-e-panel-container .w-e-up-img-container {  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn {  display: inline-block;  *display: inline;  *zoom: 1;  color: #999;  cursor: pointer;  font-size: 60px;  line-height: 1;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn:hover {  color: #333;}.w-e-text-container {  position: relative;}.w-e-text-container .w-e-progress {  position: absolute;  background-color: #1e88e5;  bottom: 0;  left: 0;  height: 1px;}.w-e-text {  padding: 0 10px;  overflow-y: scroll;}.w-e-text p,.w-e-text h1,.w-e-text h2,.w-e-text h3,.w-e-text h4,.w-e-text h5,.w-e-text table,.w-e-text pre {  margin: 10px 0;  line-height: 1.5;}.w-e-text ul,.w-e-text ol {  margin: 10px 0 10px 20px;}.w-e-text blockquote {  display: block;  border-left: 8px solid #d0e5f2;  padding: 5px 10px;  margin: 10px 0;  line-height: 1.4;  font-size: 100%;  background-color: #f1f1f1;}.w-e-text code {  display: inline-block;  *display: inline;  *zoom: 1;  background-color: #f1f1f1;  border-radius: 3px;  padding: 3px 5px;  margin: 0 3px;}.w-e-text pre code {  display: block;}.w-e-text table {  border-top: 1px solid #ccc;  border-left: 1px solid #ccc;}.w-e-text table td,.w-e-text table th {  border-bottom: 1px solid #ccc;  border-right: 1px solid #ccc;  padding: 3px 5px;}.w-e-text table th {  border-bottom: 2px solid #ccc;  text-align: center;}.w-e-text:focus {  outline: none;}.w-e-text img {  cursor: pointer;}.w-e-text img:hover {  box-shadow: 0 0 5px #333;}'; // 将 css 代码添加到 <style> 中\n\n    var style = document.createElement('style');\n    style.type = 'text/css';\n    style.innerHTML = inlinecss;\n    document.getElementsByTagName('HEAD').item(0).appendChild(style); // 返回\n\n    var index = window.wangEditor || Editor;\n\n    return index;\n\n}));\n"]}